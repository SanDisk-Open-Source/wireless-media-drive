<h1>FREQUENTLY ASKED QUESTIONS</h1>

<h2>INDEX</h2>
<BLOCKQUOTE>
1. <A href="#version1">I'm still using version 1.0 of MaraDNS</A> <P>

2. <A href="#tryout">How do I try out MaraDNS?</A> <P>

3. <A href="#license">What license is MaraDNS released under?</A><P>

4. <A href="#bugzilla">How do I report bugs in MaraDNS?</A><P>

5. <A href="#chatter">Some of the postings to the mailing list do not talk 
   about MaraDNS!</A><P>

6. <A href="#unsub">How do I get off the mailing list?</A><P>

7. <A href="#rdns">How do I set up reverse DNS on MaraDNS?</A><P>

8. <A href="#timeout">I am on a slow network, and MaraDNS can not process 
   recursive queries</A><P>

9. <A href="#obtuse">When I try to run MaraDNS, I get a 
    cryptic error message.</A><P>

10. <A href="#netstat">After I start MaraDNS, I can not see the process 
    when I run netstat -na</A><P>

11. <A href="#jsstr">What string library does MaraDNS use?</A><P>

12. <A href="#whythreads">Why does MaraDNS use a multi-threaded model?</A><P>

13. <A href="#wishlist">I feel that XXX feature should be added to MaraDNS</A><P>

14. <A href="#docbook">I feel that MaraDNS should use another documentation 
    format</A><P>

15. <A href="#patch">Is there any process I need to follow to add a patch 
    to MaraDNS?</A><P>

16. <A href="#primary">Can MaraDNS act as a primary nameserver?</A><P>

17. <A href="#secondary">Can MaraDNS act as a secondary nameserver?</A><P>

18. <A href="#auth">What is the difference between an authoritative and 
    a recursive DNS server?</A><P>

19. <A href="#bailiwick">The getzone client isn't allowing me to add certain 
    hostnames to my zone</A><P>

20. <A href="#portable">Is MaraDNS portable?</A><P>

21. <A href="#cygwin">Can I use MaraDNS in Windows?</A><P>

22. <A href="#upstream">MaraDNS freezes up after being used for a while</A><P>

23. <A href="#python">What kind of Python integration does MaraDNS have</A><P>

24. <A href="#kvar">Doesn't "kvar" mean "four" in Esperanto?</A><p>

25. <A href="#scability">How scalable is MaraDNS?</A><p>

26. <A href="#upstream_d">I am having problems setting 
    <tt>upstream_servers</tt></A><p>

27. <A href="#validate">Why doesn't the MaraDNS.org web page validate?</A><p>

28. <A href="#mx">How do MX records work?</A><p>

29. <A href="#spf">Does MaraDNS have support for SPF?</A><p>

30. <A href="#cname">I'm having problems resolving CNAMES I have set up.</A>
    <p>

31. <A href="#delegate">I have a NS delegation, and MaraDNS is doing
    strange things.</A>
    <p>

32. <A href="#synthns">I am transferring a zone from another
    server, but the NS records are these strange "synth-ip" records.</A><p>

33. <A href="#roothints">Where is the root.hints file?</A><p>

34. <A href="#autoconf">Are there any plans to use autoconf to build 
    MaraDNS?</A><p>

35. <A href="#flags">How do I change the compiler or compile-time flags
    with MaraDNS' build process?</A><p>

36. <A href="#makepkg">Will you make a package for the particular Linux 
    distribution I am using?</A><p>

37. <A href="#wincrippled">I am using the native Windows port of MaraDNS,
    and some features are not working.</A><p>

38. <A href="#startupfail">MaraDNS isn't starting up</A><p>

39. <A href="#releases">You make a lot of releases of MaraDNS; at our
    ISP/IT department, updating software is non-trivial.</A>

</BLOCKQUOTE>
<H2>ANSWERS</H2>

<A NAME=version1>
</A>
<H2>1. I'm still using version 1.0 of MaraDNS</H2>

MaraDNS 1.0 will continue to be supported until December 21, 2007; this
means that MaraDNS 1.0 bug fixes will
still be applied.  After 2007/12/21, MaraDNS 1.0 will no longer be fully 
supported; the only updates, at that point, would be bugtraq-worthy critical
security fixes.  Not even these security updates will be applied after
December 21, 2010.  

<p>

People who wish to run MaraDNS 1.0 unsupported after 2010/12/21 need to keep 
in mind that MaraDNS 1.0 is <i>not</i> Y2038 compliant, and will have 
problems starting in 2036 or so.  MaraDNS 1.2, on the other hand, is fully
Y2038 compliant.

<p>

There is still a FAQ for version 1.0 of MaraDNS available
<A href="http://www.maradns.org/faq-1.0.html">here</A>.

<p>

Updating from 1.0 to 1.2 requires a minimum number of changes; with most 
configurations, MaraDNS 1.2 is fully compatible with MaraDNS 1.0 data
files.  Details are in the <A 
href="http://www.maradns.org/tutorial/1.2/update.html">updating</A> document
in the tutorial.

<p>

While csv1 zone files are fully supported in MaraDNS 1.2, there is a Perl
script for updating from CSV1 to CSV2 zone files in the <tt>tools/</tt>
directory of MaraDNS 1.2.

<A NAME=tryout>
</A>
<H2>2. How do I try out MaraDNS?</H2>

<p>Read the <A 
href="http://www.maradns.org/tutorial/1.2/quick_start.html">quick 
start guide</A>, which is the file named 0QuickStart in the MaraDNS 
distribution.
<p>

<A NAME=license>
</A>
<H2>3. What license is MaraDNS released under?</H2>

MaraDNS 1.2 is released with the following two-clause 
BSD-type license:
<BLOCKQUOTE>
Copyright (c) 2002-2007 Sam Trenholme
<p>
TERMS
<p>
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:
<p>
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
<p>
2. Redistributions in binary form must reproduce the above copyright
notice, this list of conditions and the following disclaimer in the
documentation and/or other materials provided with the distribution.
<p>
This software is provided 'as is' with no guarantees of correctness or
fitness for purpose.
</BLOCKQUOTE>

<A NAME=bugzilla>
</A>
<H2>4. How do I report bugs in MaraDNS?</H2>

Please contact me; my email address is at
<A 
href="http://www.maradns.org/contact.html">http://www.maradns.org/contact.html</A>.  
Please be sure to include all information requested there, including
the operating system you are using, the version of MaraDNS you are using,
your <tt>mararc</tt> configuration file, and all relevant zone files.

<A NAME=chatter>
</A>
<H2>5. Some of the postings to the mailing list do not talk about MaraDNS!</H2>
In cases where I post something to the mailing list which does not directly
talk about MaraDNS, the subject line will not have [MARA] in it, but will
have some form of the word CHATTER in it.  
<P>
This way, people who do not like this can set up mail filters to filter out
anything that comes from this list and doesn't have [MARA] in the subject
line, or simply unsubscribe from the list and read the list from the
archives; if one needs to report a bug, they can subscribe to the list
again, post their bug, then unsubscribe after a week.  
<P>
Another option is to set up one's Freshmeat preferences to be notified
in email every time I update MaraDNS at Freshmeat.  This will give one
email notice of any critical bug fixes without needing to be
subscribed to the mailing list.
<P>
The web page <A href="http://www.maradns.org">http://www.maradns.org/</A>
has a link to the mailing list archives.

<A NAME=unsub>
</A>
<H2>6. How do I get off the mailing list?</H2>
Send an email to list-request@maradns.org with "unsubscribe" as the
subject line.

<A NAME=rdns>
</A>
<H2>7. How do I set up reverse DNS on MaraDNS?</H2>

Reverse DNS (sometimes called "reverse mapping") is set up by using 
PTR (pointer) records.  For example, the PTR record which performs
the reverse DNS lookup for the ip 10.2.3.4 looks like this in a CSV2 zone
file:
<blockquote>
<tt>
4.3.2.10.in-addr.arpa. PTR www.example.com. ~
</tt>
</blockquote>
<p>

It is also possible, on MaraDNS 1.2.05 and more recent releases, to
use a special "FQDN4" which automatically sets up the reverse
mapping of a given record:

<blockquote>
<tt>
www.example.com. FQDN6 10.2.3.4 ~
</tt>
</blockquote>

If you wish to have a PTR (reverse DNS lookup; getting a DNS name from a
numeric IP) record work on the internet at large, it is not a simple
matter of just adding a record like this to a MaraDNS zonefile.  One also
needs control of the appropriate in-addr.arpa. domain.

<p>

While it can make logical sense to contact the IP 10.11.12.13 when trying
to get the reverse DNS lookup (fully qualified domain name) for a given
IP, DNS servers don't do this.  DNS server, instead, contact the root
DNS servers for a given in-addr.arpa name to get the reverse DNS lookup,
just like they do with any other record type.

<p>

When an internet service provider is given a block of IPs, they are also
given control of the DNS zones which allow them to control reverse DNS
lookups for those IPs.  While it is possible to obtain a domain and run
a DNS server without the knowledge or intervention of an ISP, being
able to control reverse DNS lookups for those IPs requires ISP 
intervention.

<A NAME=timeout>
</A>
<H2>8. I am on a slow network, and MaraDNS can not process recursive 
queries</H2>

MaraDNS, by default, only waits two seconds for a reply from a remote
DNS server.  This default can be increased by adding a line like this 
in the mararc file:

<blockquote>
<pre>
timeout_seconds = 5 
</pre>
</blockquote>

Note that making this too high will slow MaraDNS down when DNS servers
are down, which is, alas, all too common on today's internet.

<A NAME=obtuse>
</A>
<H2>9. When I try to run MaraDNS, I get a cryptic
error message.</H2>

There is usually some context of where there is a syntax error in a
data file before the cryptic error message.  For example, when there
is a syntax error in a csv2 zone file, MaraDNS will tell you exactly
at what point it had to terminate parsing of the zone file.

<p>

If MaraDNS does return a cryptic error message without letting you know
what is wrong, <A href="http://www.maradns.org/contact.html">let me know</A> 
so that I can fix the bug.  MaraDNS is designed
to be easy to use; cryptic error messages go against this spirit.

<A NAME=netstat>
</A>
<H2>10. After I start MaraDNS, I can not see the process when I run netstat -na
</H2>

Udp services do not have a prominent "LISTEN" when netstat is run.
<p>
When MaraDNS is up, the relevant line in the netstat output looks 
like this:            
<tt>
udp        0      0 127.0.0.1:53            0.0.0.0:* 
</tt>
<p>
While on the topic of netstat, if you run <TT>netstat -nap</TT> as root
on Linux and some other *nix operating systems, you can see the names of 
the processes which are providing internet services.

<A NAME=jsstr>
</A>
<H2>11. What string library does MaraDNS use?</H2>

<p>MaraDNS uses its own string library, which is called the "js_string"
library.  Man pages for most of the functions in the js_string library
are in the folder <tt>doc/man</tt> of the <A 
href="http://www.maradns.org/download.html">MaraDNS
distribution</A>

<A name=whythreads>
</A>
<H2>12. Why does MaraDNS use a multi-threaded model?</H2>

<p>The multi-threaded model is, plain and simple, the simplest way to write
a functioning recursive DNS server.  There is a reason why MaraDNS, pdnsd, and
BIND 9 all use the multi-threaded model.

<p>I am planning on improving MaraDNS' threaded model to not spawn a thread 
for each and every uncached request.

<A NAME=wishlist>
</A>
<H2>13. I feel that XXX feature should be added to MaraDNS</H2>
<p>
The only thing that will convince me to implement a given feature for
MaraDNS is cold, hard cash.  If you want me to keep a given feature
proprietary, you better have lots of cold hard cash.  If you're willing
to opensource your feature, less cash should be sufficient.
<p>
Keep in mind that both the BIND and NSD name servers were 
developed by having the programmers paid to work on the programs.  
PowerDNS was originally commercial software with the author only 
reluctantly made GPL after seeing that the market
for a commercial DNS server is very small.  All of the other DNS servers
which have been developed as hobbyist projects (Posadis, Pdnsd, and djbdns)
are no longer being actively worked on by the primary developer.
<p>

My current plans for MaraDNS are visible on the 
<A href=roadmap.html>roadmap page</A> for MaraDNS.

<p>
If I see a large
MaraDNS community and a strong demand for new features from that community,
I will consider their wishes.  Especially if some of the members of 
the community
have large bank accounts.  Should ipv6 start to become dominant, I will update
MaraDNS to have full ipv6 support.  Should some other technology come along
that will require an update to MaraDNS for MaraDNS to continue to function
as a DNS server, I may very well update MaraDNS to use that technology.


<A NAME=docbook>
</A>
<H2>14. I feel that MaraDNS should use another documentation format</H2>
<p>
The reason that MaraDNS uses its own documentation format is to satisfy both
the needs of translators to have a unified document format and my own 
need to use a documentation format that is simple enough to be readily
understood and which I can add features on an 
as needed basis.
<p>
The documentation format is essentially simplified HTML with some
special tags added to meet MaraDNS' special needs.
<p>
This gives me more flexibility to adapt the documentation format to
changing needs.  For example, when someone pointed out that it's not
a good idea to have man pages with hi-bit characters, it was a simple matter
to add a new HIBIT tag which allows man pages to be without
hi-bit characters, and other document formats to retain hi-bit characters.
<p>
Having a given program have its own documentation format is not
without precedent; Perl uses its own "pod" documentation format.

<A NAME=patch>
</A>
<H2>15. Is there any process I need to follow to add a patch to MaraDNS?</H2>

<p>Yes.  

<p>Here is the procedure for making a proper patch:

<p>

<ul>
<li>Enter the directory that the file is in, for example
    <tt>maradns-1.2.00/server</tt>

<li>Copy over the file that you wish to modify to another file
    name.  For example: <tt>cp MaraDNS.c MaraDNS.c.orig</tt>

<li>Edit the file in question, e.g: <tt>vi MaraDNS.c</tt>

<li>After editing, do something like this: <br><tt>
    diff -u MaraDNS.c.orig MaraDNS.c > maradns.patch</tt>

<li>Make sure the modified version compiles cleanly

</ul>

Send a patch to me in email, along with a statement that you place
the contents of the patch under MaraDNS' BSD license.  If I find that the patch
works well, I will integrate it in to MaraDNS.

<A NAME=primary>
</A>
<H2>16. Can MaraDNS act as a primary nameserver?</H2>

<p>Yes.

<p>The <tt>zoneserver</tt> program serves zones so that other DNS servers
can be secondaries for zones which MaraDNS serves.  This is a separate
program from the <tt>maradns</tt> server, which processes both 
authoritative and recursive UDP DNS queries.

<p>See the <A href="http://www.maradns.org/tutorial/1.2/dnsmaster.html">DNS
master</A> document in the MaraDNS tutorial for details.

<A NAME=secondary>
</A>
<H2>17. Can MaraDNS act as a secondary nameserver?</H2>

<p>Yes.

<p>Please read the <A href="http://www.maradns.org/tutorial/1.2/dnsslave.html">
DNS slave</A> document, which is part of the MaraDNS tutorial.


<A NAME=auth>
</A>
<H2>18. What is the difference between an authoritative and a recursive DNS 
server?</H2>

A recursive DNS server is a DNS server that is able to contact other DNS
servers in order to resolve a given domain name label.  This is the kind 
of DNS server one points to in <tt>/etc/resolve.conf</tt>

<p>

An authoritative DNS server is a DNS server that a recursive server 
contacts in order to find out the answer to a given DNS query.

<A NAME=bailiwick>
</A>
<H2>19. The fetchzone client isn't allowing me to add certain hostnames to 
my zone</H2>

For security reasons, MaraDNS' fetchzone client does not
add records which are not part of the zone in question.  For example,
if someone has a zone for example.com, and this record in the zone:

<p>
<tt>
1.1.1.10.in-addr.arpa. PTR dns.example.com.
</tt>
<p>
MaraDNS will not add the record, since the record is out-of-bailiwick.  In
other words, it is a host name that does not end in .example.com.  
<p>
There are two workarounds for this issue:
<UL>
<LI>Create a zone file for 1.1.10.in-addr.arpa., and put the PTR records
    there.
<LI>Use rcp, rsync, or another method to copy over the zone files in 
    question.
</UL>

<A name=portable>
</A>
<H2>20. Is MaraDNS portable?</H2>

<p>MaraDNS is developed on a CentOS 3 and Windows XP dual boot laptop.
MaraDNS may compile or run on other systems--there are official MaraDNS
ports for Debian/Ubuntu, Slackware, FreeBSD, and NetBSD.  Note that MaraDNS
needs a system with a robust threading library, which some systems do not
have.

<A NAME=cygwin>
</A>
<H2>21. Can I use MaraDNS in Windows?</H2>

<p>
Yes.  There is both a partial mingw32 (native win32 binary) port and a full
Cygwin port of MaraDNS; both of these ports are part of the native build
of MaraDNS.

<A NAME=upstream>
</A>
<H2>22. MaraDNS freezes up after being used for a while</H2>

If you are using MaraDNS 1.2.03.1 (or any 1.1 release, for that matter) on 
Linux, upgrade to version 1.2.03.2.  There is a bug with the Linux kernel
which causes UDP clients to freeze unless code is written to work around
the kernel bug.  This workaround was first introduced in MaraDNS 1.0.28
and 1.1.35 and accidently disabled in 1.2.03.1.  

<p>
If using your ISP's name servers or some other name servers which
are not, in fact, root name servers, please make sure that you are
using the upstream_servers dictionary variable instead of the
root_servers dictionary variable.

<p>

If you still see MaraDNS freeze up after making this correction, please
send a bug report to the mailing list.

<A NAME=python>
</A>
<H2>23. What kind of Python integration does MaraDNS have</H2>

The mararc file uses the same syntax that Python uses; in fact, Python
can parse a properly formatted mararc file.
<p>
There is currently no other integration with Python.

<A NAME=kvar>
</A>
<H2>24. Doesn't "kvar" mean "four" in Esperanto?</H2>

Indeed, it does.  However the use of "kvar" in the MaraDNS source
code only coincidentally is an Esperanto word.  "kvar" is short
for "Kiwi variable"; a lot of the parsing code comes from the code
used in the Kiwi spam filter project.  

<A NAME=scability>
</A>
<H2>25. How scalable is MaraDNS?</H2>

MaraDNS is optimized for serving a small number of domains as quickly
as possible.  That said, MaraDNS is remarkably efficnent for serving a
large number of domains, as long as the server MaraDNS is on has the
memory to fit all of the domains, and as long as the startup time for
loading a large number of domains can be worked around.
<P>
The "big-O" or "theta" growth rates for various MaraDNS functions
are as follows, where N is the number of authoritative host names being
served:
<p>
<pre>
Startup time                            N
Memory usage                            N
Processing incoming DNS requests        1
</pre>
<p>
As can be seen, MaraDNS will process 1 or 100000 domains in the same amount
of time, once the domain names are loaded in to memory.  

<A name=upstream_d>
</A>
<h2>26. I am having problems setting <tt>upstream_servers</tt></h2>

The <tt>upstream_servers</tt> mararc variable is set thusly:

<blockquote>
<tt>upstream_servers["."] = "10.3.28.79, 10.2.19.83"</tt>
</blockquote>

Note the <tt>["."]</tt>.  The reason for this is so future versions
of MaraDNS may have more fine-grained control over the 
<tt>upstream_servers</tt> and <tt>root_servers</tt> values.

<p>

Note that the <tt>upstream_servers</tt> variable needs to be initialized
before being used via <tt>upstream_servers = {}</tt> (the reason for this
is so that a mararc file has 100% Python-compatible syntax).  A complete
mararc file that uses <tt>upstream_servers</tt> may look like this:

<pre>
ipv4_bind_addresses = "127.0.0.1"
chroot_dir = "/etc/maradns"
recursive_acl = "127.0.0.1/8"
upstream_servers = {}
upstream_servers["."] = "10.1.2.3, 10.2.4.6"
</pre>

<a name="validate"> </a>
<h2>27. Why doesn't the MaraDNS.org web page validate?</h2>

HTML pages on the MaraDNS.org web site should validate as
HTML 4.0 Transitional.  However, the CSS will not validate.
<p>
I have designed MaraDNS' web page to be usable and as attractive as possible
in any major browser released in the last ten years.  Cross-browser support
is more important than strict <A href="http://validator.w3.org">W3 
validation</A>.  The reason why the CSS does not validate is because 
I need a way to make sure there is always a scrollbar on the web page,
even if the content is not big enough to merit one; this is to avoid the
content jumping from page to page.  There is no standard
CSS tag that lets me do this.  I'm using a non-standard tag to enable
this in Gecko (Firefox's rendering engine); this is enabled by default in
Trident (Internet Explorer's rendering engine).  The standards are deficient
and blind adherence to them would result in an inferior web site.
<p>
There are also two validation warnings generated by redefinitions which
are needed as part of the CSS filters used to make the site attractive on 
older browsers with limited CSS support.
<p>
On a related note, the reason why I use tables instead of CSS for some of
the layout is because Microsoft Internet Explorer 6 and other browsers do
not have support for the <tt>max-width</tt> CSS property.  Without this
property, the web page will not scale down correctly without using tables.  
Additionally, tables allow a reasonably attractive header in browsers 
without CSS support.

<a name="mx"> </a>
<h2>28. How do MX records work?</h2>

How MX records work:

<ul>
<li>The mail transport agent (Sendmail, Postfix, Qmail, MS Exchange, etc.)
  looks up the MX record for the domain
<li>For each of the records returned, the MTA (mail transport agent) looks
  up the IP for the names.
<li>It will choose, at random, any of the MXes with the lowest priority number.
<li>Should that server fail, it will try another server with the same
  priority number.
<li>Should all MX records with a given priority number fail, the MTA will
  try sending email to any of the MX records with the second-lowest
  priority value.
</ul>

As an aside, do not have MX records point to CNAMEs.

<a name="spf"> </a>
<h2>29. Does MaraDNS have support for SPF?</h2>

SPF, or sender policy framework, is method of using DNS that makes
it more difficult to forge email.  MaraDNS has full support for SPF,
both via TXT records and, starting with MaraDNS 1.2.08, via RFC4408 
SPF records.  

<p>

SPF configuration is beyond the scope of MaraDNS' documentation.  However,
at the time of this FAQ entry being written (June, 2006), information
and documentation concerning SPF is available at 
<A href="http://openspf.org">http://openspf.org</A>.  The BIND examples
will work in MaraDNS csv2 zone files as long as the double quotes (") are 
replaced by single quotes (').  For example, a SPF TXT record that 
looks like <tt>example.net. IN TXT "v=spf1 +mx a:colo.example.com/28 -all"</tt>
in a BIND zone file will look like 
<tt>example.net. TXT 'v=spf1 +mx a:colo.example.com/28 -all'</tt> in a
MaraDNS zone file.  MaraDNS version 1.2.08 and higher can also make
the corresponding SPF record, which will have the syntax
<tt>example.net. SPF 'v=spf1 +mx a:colo.example.com/28 -all'</tt>.

<A name="cname"> </A>
<h2>30. I'm having problems resolving CNAMES I have set up.</h2>

This is probably because you have set up what MaraDNS calls a dangling CNAME
record.
<p>
Let us suppose we have a CNAME record without an A record in the local
DNS server's database, such as:

<pre>
	google.example.com. CNAME www.google.com. ~
</pre>

<p>

This record, which is a CNAME record for "google.example.com", points
to "www.google.com".  Some DNS servers will recursively look up 
www.google.com, and render the above record like this:

<pre>
	google.example.com. CNAME www.google.com. ~
	www.google.com. CNAME 66.102.7.104 ~
</pre>

<p>

For security reasons, MaraDNS doesn't do this.  Instead, MaraDNS will simply
output:

<pre>
	google.example.com. CNAME www.google.com. ~
</pre>

Some stub resolvers will be unable to resolve google.example.com as
a consequence.

<p>
If you set up MaraDNS to resolve CNAMEs thusly, you will get a warning
in your logs about having a dangling CNAME record.
<p>

If you want to remove these warnings, add the following to your mararc file:

<pre>
	no_cname_warnings = 1
</pre>

<p>

Information about how to get MaraDNS to resolve dangling CNAME
records is in the tutorial file <A 
href="http://www.maradns.org/tutorial/dangling.html">dangling.html</A>

<A name="delegate">
</A>
<h2>I have a NS delegation, and MaraDNS is doing
    strange things.</h2>

In the case of there being a NS delegation, MaraDNS handles recursive
queries and non-recursive DNS queries differently.  Basically, unless
you use <tt>askmara</tt> with the <tt>-n</tt> option, dig with the 
<tt>+norecuse</tt> option, or <tt>nslookup</tt> with the <tt>-norec</tt>
option, MaraDNS will try to recursively resolve the record that is 
delegated.

<p>

The thinking is this: A normal recursive DNS query is usually one 
where one wants to know the final DNS output.  So, if MaraDNS
delegates a given record to another DNS server, and gets a recursive
request for said query, MaraDNS will recursively resolve the query
for you.

<p>

For example, let us suppose we have a <tt>mararc</tt> file that looks
like this:

<pre>
chroot_dir = "/etc/maradns"
ipv4_bind_addresses = "10.1.2.3"
chroot_dir = "/etc/maradns"
recursive_acl = "127.0.0.1/8, 10.0.0.0/8"
csv2 = {}
csv2["example.com."] = "db.example.com"
</pre>

And a <tt>db.example.com</tt> file that looks like this:

<pre>
www.example.com. 	10.1.2.3 ~
joe.example.com. 	NS ns.joe.example.com. ~
ns.joe.example.com.	A 10.1.2.4 ~
</pre>

Next, you are trying to find out why www.joe.example.com is not
resolving.  If you naively send a query to 10.1.2.3 for www.joe.example.com
as <tt>askmara Awww.joe.example.com. 10.1.2.3</tt> or as
<tt>dig @10.1.2.3 www.joe.example.com.</tt> or as 
<tt>nslookup www.joe.example.com. 10.1.2.3</tt>, you will <b>not</b>
get any information that will help you solve the problem, since 10.1.2.3
will try to contact 10.1.2.4 to resolve www.joe.example.com.

<p>

The solution is to run your DNS query client thusly:

<ul>
<li>Askmara would be run thusly: 
<p><tt>askmara -n Awww.joe.example.com. 10.1.2.3</tt><p>
<li>Dig would be run thusly: 
<p><tt>dig +norecurse @10.1.2.3 www.joe.example.com</tt><p>
<li>Nslookup would be run thusly: 
<p><tt>nslookup -norec www.joe.example.com 10.1.2.3</tt><p>
</ul>

This will allow you to see that packets MaraDNS actually sends to
a recursive DNS server.

<p>

As an aside, this particular problem will not happen if MaraDNS is
run only as an authoritative nameserver.

<A name="synthns"> </A>

<h2>I am transferring a zone from another
    server, but the NS records are these strange "synth-ip" records.
</h2>

MaraDNS expects, in csv2 zone files, for all
delegation NS records to be between the SOA record and the first
non-NS record.

<p>

If a zone looks like this:

<pre>
example.net. +600 soa ns1.example.net. hostmaster@example.net 
10 10800 3600 604800 1080 ~
example.net. +600 mx 10 mail.example.net. ~
example.net. +600 a 10.2.3.5 ~
example.net. +600 ns ns1.example.net. ~
example.net. +600 ns ns3.example.net. ~
mail.example.net. +600 a 10.2.3.7 ~
www.example.net. +600 a 10.2.3.11 ~
</pre>

Then the NS records will be "synth-ip" records.

<p>

The zone should look like this:

<pre>
example.net. +600 soa ns1.example.net. hostmaster@example.net 
10 10800 3600 604800 1080 ~
example.net. +600 ns ns1.example.net. ~
example.net. +600 ns ns3.example.net. ~
example.net. +600 mx 10 mail.example.net. ~
example.net. +600 a 10.2.3.5 ~
mail.example.net. +600 a 10.2.3.7 ~
www.example.net. +600 a 10.2.3.11 ~
</pre>

This will remove the "synth-ip" records.

<p>

To automate this process, this awk script is useful:

<pre>
fetchzone whatever.zone.foo 10.1.2.3 | awk '
{if($3 ~ /ns/ || $3 ~ /soa/){print}
else{a = a "\n" $0}}
END{print a}' > zonefile.csv2
</pre>

Replace "whatever.zone.foo" with the name of the zone you are
fetchin 10.1.2.3 with the IP address of the DNS master, and
zonefile.csv2 with the name of the zone file MaraDNS loads.

<A name=roothints> </A>
<h2>Where is the root.hints file?</h2>

MaraDNS, unlike BIND, does not need a complicated root.hints file in
order to have custom root servers.  In order to change the root.hints
file, add something like this to your mararc file:

<pre>
root_servers["."] =  "131.161.247.232,"
root_servers["."] += "208.185.249.250,"
root_servers["."] += "66.227.42.140,"
root_servers["."] += "66.227.42.149,"
root_servers["."] += "65.243.92.254"
</pre>

Note that there is no "+=" in the first line, and the last line does not
have a comma at the end.  Read the recursive tutorial document for more
information. 

<A name=autoconf> </A>
<h2>Are there any plans to use autoconf to build
    MaraDNS?</h2>

No.  OK, let me qualify that: I won't do it unless you pay
me enough money.
<p>

In more detail, MaraDNS does not use autoconf for the following reasons:

<ul>
<li>Autoconf is designed to solve a problem that existed in the mid 1990s
    but does not exist today: A large number of different incompatible C 
    compilers and libc implementations.  These days, most systems are using 
    gcc as the compiler and some version of glibc as the libc.  There is
    no longer a need, for example, to figure out whether a given 
    implementation of <tt>getopt()</tt> allows '<tt>--</tt>' options.
    MaraDNS's <tt>./configure</tt> script can be run in only a second or
    two; compare this to the 3-5 minute process autoconf's <tt>./configure</tt>
    needs.
<li>Autoconf leaves GPL-tained files in a program's build tree.  MaraDNS is
    licensed under a BSD license that is <i>not</i> GPL-compatible, so 
    MaraDNS can not be distributed with these GPL-licensed files.
</ul>

This leads us to the next question:
   
<A name=flags> </A>
<h2>How do I change the compiler or compile-time flags
    with MaraDNS' build process?</h2>

To change the compiler used by MaraDNS:

<ul>
<li>Run the <tt>./configure</tt> script
<li>Open up the file <tt>Makefile</tt> with an editor
<li>Look for a line that starts with <tt>CC</tt>
<li>If there is no line that starts with <tt>CC</tt>, create one just before
    the line that starts with <tt>FLAGS</tt>
<li>Change (or create) that line to look something like <tt>CC=gcc296</tt> 
    In this example, the 2.96 version of gcc is used to compile MaraDNS.
<li>Note that it is important to <b>not</b> remove anything from this line
    you do not understand; doing so will make MaraDNS unable to compile
    or run.  So, if the CC line looks like 
    <tt>CC=gcc&nbsp;$(LDFLAGS)&nbsp;-DNO_FLOCK</tt> and you want to compile 
    with gcc 2.96, change the line to look like 
    <tt>CC=gcc296&nbsp;$(LDFLAGS)&nbsp;-DNO_FLOCK</tt> retaining the flags 
    added by the configuration script.

</ul>

Changing compile-time flags is a similar process:

<ul>
<li>Run the <tt>./configure</tt> script
<li>Open up the file <tt>Makefile</tt> with an editor
<li>Look for a line that starts with <tt>FLAGS</tt>
<li>Change (or create) that line to look something like <tt>FLAGS=-O3</tt> 
    In this example, MaraDNS is compiled with the -O3 option.
<li>Note that it is important to <b>not</b> remove anything from this line
    you do not understand; doing so will make MaraDNS unable to compile
    or run.  So, if the FLAGS line looks like 
    <tt>FLAGS=-O2&nbsp;-Wall&nbsp;-DSELECT_PROBLEM</tt> and you want to compile 
    at optimization level three, change this line to look like 
    <tt>FLAGS=-O2&nbsp;-Wall&nbsp;-DSELECT_PROBLEM</tt> retaining the flags 
    added by the configuration script.  <tt>-DSELECT_PROBLEM</tt> for example,
    is needed in the Linux compile or MaraDNS will have problems with 
    freezing up.
</ul>

<A name=makepkg> </A>
<h2>Will you make a package for the particular Linux
    distribution I am using?</h2>

No.  OK, let me qualify that: I won't do it unless you pay
me enough money.
<p>

There are MaraDNS packages for a number of different distributions of
Linux and other operating systems.   On the MaraDNS site, there is 
a MaraDNS package for CentOS/Red Hat Enterprise Linux available.  There
is also usually an up-to-date Slackware package available.  In addition,
there is a Debian package in the Debian packages collection, a FreeBSD
port of MaraDNS, a Ubuntu package which is derived from the Debian package,
and undoubtably other MaraDNS packages floating around the internet.
<p>

If you wish to have a package for your particular version of Linux (or 
MacOS X or BSD or...), you can use one of the above packages as a starting
point for making your package.  For example, other RPM-based distributions
can use the CentOS RPM package as a baseline (the .spec file is in the
<tt>build/</tt> directory).  I can not help you with any problems you
may encounter making this package since I do not have your particular
version of Linux installed on my computer.
<p>

As an aside, some of the MaraDNS packages floating around on the internet
are out of date (*cough*, Debian, *cough*)<sup><font
size=-2>1</font></sup>.  Please make sure, that if you get a third-party
package from the internet, the package is for either MaraDNS 1.0.41,
MaraDNS 1.2.12.08, or MaraDNS 1.3.07.05.  Older versions of MaraDNS are
not supported. <p>

Footnote 1: Debian has a somewhat silly policy that, once a package is
declared "stable", they will basically not update it unless there is a 
Bugtraq security advisory for the package in question.  This policy is
a good policy for programs made by pimply-faced 16-year-olds who don't
know how to manage a release cycle nor a bugfix-only branch, but doesn't
make sense for MaraDNS.  As I write this, the Debian's "stable" version of
MaraDNS is 1.2.12.04, which is about a year behind in terms of bugfixes.  
I, annoyingly enough, get bug reports from Debian users telling me about 
bugs I have already fixed in the 1.2 branch of MaraDNS.<p>

Now, to be fair to Debian, their policies do allow me to backport bugfixes
to the 1.2.12.04 release of MaraDNS, and the patches do get reviewed by
somone else, which minimizes bugfixes introducing new bugs (Yes, I have
done that), but there are not enough volunteers to review all of the
bugfixes I have made since 1.2.12.04.  So, Debian users get stuck with
an old, buggy version of MaraDNS.  The policy would work if there were
enough volunteers to actually review all of my post-1.2.12.04 bugfixes,
but the people who created the policy did not take in to account the
logistics of volunteer work.

<A name=wincrippled> </A>
<h2>I am using the native Windows port of MaraDNS,
    and some features are not working.</h2>

Since Windows 32 does not have some features that *NIX OSes have, the native
Windows port does not have all of the features of the *NIX version of 
MaraDNS.  In particular, the following features are disabled:
<ul>
<li>ipv6 (this is actually a mingw32, not a Windows deficiency)
<li>The <tt>chroot_dir</tt> mararc variable
<li>The <tt>maradns_gid</tt> and <tt>maradns_uid</tt> mararc variables
<li>The <tt>maxprocs</tt> mararc variable
<li>The <tt>synth_soa_serial</tt> variable can not have a value of 2
</ul>

If any of the above features are desired, try compiling MaraDNS using
Cygwin.  Note that the Cygwin port of MaraDNS does not have ipv6 support,
and that while <tt>chroot_dir</tt> works in Cygwin, it does not have
the security that the *NIX chroot() call has.

<A name=startupfail> </A>

<h2>MaraDNS isn't starting up</h2>

This is usually caused by a syntax error in one's mararc file, or by
another MaraDNS process already running.  To see what is happening, look
at your system log (<tt>/var/log/messages</tt> in Centos 3) to see what
errors MaraDNS reports.  If you do not know how to look at a system
log, you can also invoke MaraDNS from the command line as root; any errors
will be visible when starting MaraDNS.

<A name=releases> </A>

<h2>You make a lot of releases of MaraDNS; at our
    ISP/IT department, updating software is non-trivial.</h2>

The number of releases seen in the <A href=changelog.html>changelog</A>
is not an accurate reflection of how often someone using a stable
branch of MaraDNS will need to update.

<p>

There were only three updates to the 1.0 legacy branch in 2006, and (so far)
only two updates to the 1.0 branch in 2007.  The 1.2 branch
was updated frequently in the first half of 2006, since I felt MaraDNS 1.2
needed some features that didn't make it in to 1.2.00.  During this update
cycle, there was always a stable bugfix-only branch of MaraDNS.

<p>

In August of 2006, I stabilized the 1.2 branch and only five updates 
have been done since then.  Unless there is a critical bug, I only will update
the 1.2 branch approximately once every six months or so.

<p>

I go to a great deal of effort to make sure MaraDNS releases are as
painless to update as possible.  I ensure configuration file format
compatibility, even between major versions of MaraDNS.  With the exception
of configuration file parser bugfixes, MaraDNS 1.0 configuration files
are compatible with MaraDNS 1.2 and 1.3.  

<p>

It is impossible to make code that is bug-free or without security 
problems.  This is especially true with code that runs on the public
internet.<sup><font size=-2>1</font></sup>  Code has to be updated from
time to time.  What I do in order to minimize the disruption caused by an
update is to always have a stable bugfix-only branch of MaraDNS (right now I 
have <i>three</i> bugfix-only branches), and to, as much as possible, evenly
space out the bugfix updates.

<p>

Footnote 1: Even DJB's code has security problems.  Both Qmail and DjbDNS
have known security problems, and need to be patched before put on a public
internet server.

