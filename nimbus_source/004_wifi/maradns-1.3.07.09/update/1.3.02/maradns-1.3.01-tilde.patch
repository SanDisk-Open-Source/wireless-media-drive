*** maradns-1.3.01/parse/Csv2_parse.c	2006-12-21 00:34:46.000000000 -0800
--- maradns-1.3.02/parse/Csv2_parse.c	2006-12-23 07:37:27.000000000 -0800
***************
*** 323,335 ****
  
  /* process_comment: Process a comment that we find in the input stream */
  void process_comment(csv2_read *stream) {
! 	int in, q;
          q = 1;
! 
  	do {
  		in = csv2_readchar(stream);
! 		/* Only the first tilde is considered a tilde */
! 		if(in == '~' && q != 1) {
  			(stream->tilde_seen)--;
  		}
                  q++;
--- 323,337 ----
  
  /* process_comment: Process a comment that we find in the input stream */
  void process_comment(csv2_read *stream) {
! 	int in, q, z;
          q = 1;
!         
!         z = stream->chars_allowed;
!         csv2_allow_tilde(stream);
  	do {
  		in = csv2_readchar(stream);
! 		/* Tildes are allowed (and ignored) in comments */
! 		if(in == '~') {
  			(stream->tilde_seen)--;
  		}
                  q++;
***************
*** 338,343 ****
--- 340,346 ----
  			return;
                  }
  	} while(in != '\n' && in != '\r' && in != -2 /* EOF */);
+        	stream->chars_allowed = z; 
  }
  
  /* Handler for processing things before the beginning of a RR; this
***************
*** 478,495 ****
  		}
  		/* # for comments */
  		if(in == '#') {
- 			int ttt;
- 			ttt = 0;	
- 			if(options == 1 && 
-                             (stream->tilde_handling == 2 ||
-                              stream->tilde_handling == 3)) {
- 				ttt = 1;	
- 				csv2_allow_tilde(stream);
- 			}
  			process_comment(stream);
- 			if(ttt == 1) {
- 				csv2_forbid_tilde(stream);
- 			}
  			in = '\n';
  		}
  		else if(options != 1 && is_ok(in)) {
--- 481,487 ----
*** maradns-1.3.01/doc/en/source/csv2.ej	2006-12-21 00:34:46.000000000 -0800
--- maradns-1.3.02/doc/en/source/csv2.ej	2006-12-23 07:38:57.000000000 -0800
***************
*** 53,68 ****
  
  The zone file supports comments; comments are specified by having a '#' 
  anywhere between fields or records; when a '#' is seen, the csv2 parser 
! ignores any character it sees (with the exception of the '{' and '~' 
! characters) until a newline.  A '#' can usually be placed inside a field, 
! and indicates the end of a field when placed there.
  <p>
  
! A '{' character can never be placed in a comment.  I '~' character normally
! can not be placed in a comment; the only time it can be placed in a comment
! is between resource records.  If the '~' character is placed immediately
! after the initial '#' character, the '~' is used as a resource record
! delimiter.  Otherwise, the '~' character has no meta-significance.
  
  <p>
  
--- 53,65 ----
  
  The zone file supports comments; comments are specified by having a '#' 
  anywhere between fields or records; when a '#' is seen, the csv2 parser 
! ignores any character it sees (with the exception of the '{', which
! is not allowed in comments) until a newline.  A '#' can usually be 
! placed inside a field, and indicates the end of a field when placed there.
  <p>
  
! A '{' character can never be placed in a comment.  A '~' character is always
! allowed in a comment, and has no special meaning when placed in a comment.
  
  <p>
  
