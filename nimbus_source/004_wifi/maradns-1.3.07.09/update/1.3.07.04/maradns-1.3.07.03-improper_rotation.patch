This patch fixes a long-term bug where CNAME records were incorrectly
rotated when a NS query was sent to them.

--- maradns-1.3.07.03/server/udpsuccess.c	2007-08-16 08:35:43.000000000 -0500
+++ maradns-1.3.07.04/server/udpsuccess.c	2007-08-28 20:50:45.000000000 -0500
@@ -182,7 +182,8 @@
                is buggy if we round-robin rotate data when we allow more than
                one additional record to be create per answer/authoritative
                record.  */
-            if(rotate_2nd != 0 && max_ar_chain == 1 && rotate_last != 0) {
+            if(rotate_2nd != 0 && max_ar_chain == 1 && rotate_last != 0 &&
+               first_rr_type != RR_NS) {
                 /* If it makes sense to do a round-robin rotation, do so.
 		 * Make rotate_1st, which was the first record, the last
 		 * record; make rotate_2nd, which was the second record,
@@ -446,7 +447,8 @@
         rotate_last = where;
         where = where->next;
         /* If it makes sense to do a round-robin rotation, do so */
-        if(where == 0 && rotate_2nd != 0 && max_ar_chain == 1) {
+        if(where == 0 && rotate_2nd != 0 && max_ar_chain == 1 &&
+           first_rr_type != RR_NS) {
             /* For records in the cache, we need to make sure that
                the custodian properly points to the first record
                in the chain or we will leak memory */
--- maradns-1.3.07.03/server/MaraDNS.c	2007-08-16 08:35:43.000000000 -0500
+++ maradns-1.3.07.04/server/MaraDNS.c	2007-08-28 21:05:50.000000000 -0500
@@ -590,7 +590,8 @@
                is buggy if we round-robin rotate data when we allow more than
                one additional record to be create per answer/authoritative
                record.  */
-            if(rotate_2nd != 0 && max_ar_chain == 1 && rotate_done == 0) {
+            if(rotate_2nd != 0 && max_ar_chain == 1 && rotate_done == 0 
+               && first_rr_type != RR_NS) {
                 rotate_done = 1;
                 /* If it makes sense to do a round-robin rotation */
                 rotate_1st->next = where;
