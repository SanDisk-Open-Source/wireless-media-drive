`configure' configures libjpeg-turbo 1.2.1 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
			  [/opt/libjpeg-turbo]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
			  [PREFIX]

By default, `make install' will install all the files in
`/opt/libjpeg-turbo/bin', `/opt/libjpeg-turbo/lib' etc.  You can specify
an installation prefix other than `/opt/libjpeg-turbo' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR           user executables [EPREFIX/bin]
  --sbindir=DIR          system admin executables [EPREFIX/sbin]
  --libexecdir=DIR       program executables [EPREFIX/libexec]
  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
  --libdir=DIR           object code libraries [EPREFIX/lib]
  --includedir=DIR       C header files [PREFIX/include]
  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
  --infodir=DIR          info documentation [PREFIX/info]
  --mandir=DIR           man documentation [PREFIX/man]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --enable-shared[=PKGS]
                          build shared libraries [default=yes]
  --enable-static[=PKGS]
                          build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-ld-version-script
                          Disable linker version script for libjpeg-turbo
                          (default is to use linker version script if the
                          linker supports it)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-pic              try to use only PIC/non-PIC objects [default=use
                          both]
  --with-tags[=TAGS]
                          include additional configurations [automatic]
  --with-jpeg7            Emulate libjpeg v7 API/ABI (this makes libjpeg-turbo
                          backward incompatible with libjpeg v6b.)
  --with-jpeg8            Emulate libjpeg v8 API/ABI (this makes libjpeg-turbo
                          backward incompatible with libjpeg v6b.)
  --without-arith-enc     Omit arithmetic encoding support
  --without-arith-dec     Omit arithmetic decoding support
  --with-java             Build Java wrapper for the TurboJPEG/OSS library
  --with-gas-preprocessor Force using gas-preprocessor.pl on ARM.
  --without-simd          Omit SIMD extensions.

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
              headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CCAS        assembler compiler command (defaults to CC)
  CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CXXCPP      C++ preprocessor
  F77         Fortran 77 compiler command
  FFLAGS      Fortran 77 compiler flags
  JPEG_LIB_VERSION
              libjpeg API version (62, 70, or 80)
  SO_MAJOR_VERSION
              Major version of the libjpeg-turbo shared library (default is
              determined by the API version)
  SO_MINOR_VERSION
              Minor version of the libjpeg-turbo shared library (default is
              determined by the API version)
  JAVAC       Java compiler command (default: javac)
  JAVACFLAGS  Java compiler flags
  JAR         Java archive command (default: jar)
  JAVA        Java runtime command (default: java)
  JNI_CFLAGS  C compiler flags needed to include jni.h (default:
              -I/System/Library/Frameworks/JavaVM.framework/Headers on OS X,
              '-I/usr/java/include -I/usr/java/include/solaris' on Solaris,
              and '-I/usr/java/default/include
              -I/usr/java/default/include/linux' on Linux)

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

