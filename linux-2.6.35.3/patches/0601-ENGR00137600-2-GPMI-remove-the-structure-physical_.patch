From 3c9544c44b66ca43768a781f49aa28f594d28078 Mon Sep 17 00:00:00 2001
From: Huang Shijie <b32955@freescale.com>
Date: Wed, 5 Jan 2011 10:23:14 +0800
Subject: [PATCH] ENGR00137600-2 GPMI : remove the structure physical_geometry{} for imx23

Remove the physical_geometry{} in imx23.
Also remove some empty lines.

Signed-off-by: Huang Shijie <b32955@freescale.com>
---
 drivers/mtd/nand/gpmi-nfc/gpmi-nfc-rom-v0.c |   83 ++++----------------------
 1 files changed, 13 insertions(+), 70 deletions(-)

diff --git a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-rom-v0.c b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-rom-v0.c
index 83c2208..78f6a43 100644
--- a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-rom-v0.c
+++ b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-rom-v0.c
@@ -34,22 +34,19 @@ static const char  *fingerprint = "STMP";
  */
 static int set_geometry(struct gpmi_nfc_data *this)
 {
-	struct gpmi_nfc_platform_data  *pdata    =  this->pdata;
-	struct physical_geometry       *physical = &this->physical_geometry;
-	struct boot_rom_geometry       *geometry = &this->rom_geometry;
+	struct gpmi_nfc_platform_data	*pdata    =  this->pdata;
+	struct boot_rom_geometry	*geometry = &this->rom_geometry;
+	struct nand_chip		*nand     = &this->mil.nand;
 	int                             error;
 
 	/* Version-independent geometry. */
-
 	error = gpmi_nfc_rom_helper_set_geometry(this);
-
 	if (error)
 		return error;
 
 	/*
 	 * Check if the platform data indicates we are to protect the boot area.
 	 */
-
 	if (!pdata->boot_area_size_in_bytes) {
 		geometry->boot_area_count         = 0;
 		geometry->boot_area_size_in_bytes = 0;
@@ -61,8 +58,7 @@ static int set_geometry(struct gpmi_nfc_data *this)
 	 * protect the boot areas. In this version of the ROM, the number of
 	 * boot areas and their size depends on the number of chips.
 	 */
-
-	if (physical->chip_count == 1) {
+	if (nand->numchips == 1) {
 		geometry->boot_area_count = 1;
 		geometry->boot_area_size_in_bytes =
 					pdata->boot_area_size_in_bytes * 2;
@@ -71,11 +67,7 @@ static int set_geometry(struct gpmi_nfc_data *this)
 		geometry->boot_area_size_in_bytes =
 					pdata->boot_area_size_in_bytes;
 	}
-
-	/* Return success. */
-
 	return 0;
-
 }
 
 /**
@@ -87,7 +79,6 @@ static int set_geometry(struct gpmi_nfc_data *this)
  */
 static int check_transcription_stamp(struct gpmi_nfc_data *this)
 {
-	struct physical_geometry  *physical = &this->physical_geometry;
 	struct boot_rom_geometry  *rom_geo  = &this->rom_geometry;
 	struct mil                *mil      = &this->mil;
 	struct mtd_info           *mtd      = &mil->mtd;
@@ -101,26 +92,21 @@ static int check_transcription_stamp(struct gpmi_nfc_data *this)
 	int                       found_an_ncb_fingerprint = false;
 
 	/* Compute the number of strides in a search area. */
-
 	search_area_size_in_strides = 1 << rom_geo->search_area_stride_exponent;
 
 	/* Select chip 0. */
-
 	saved_chip_number = mil->current_chip;
 	nand->select_chip(mtd, 0);
 
 	/*
 	 * Loop through the first search area, looking for the NCB fingerprint.
 	 */
-
 	pr_info("Scanning for an NCB fingerprint...\n");
 
 	for (stride = 0; stride < search_area_size_in_strides; stride++) {
-
 		/* Compute the page and byte addresses. */
-
 		page = stride * rom_geo->stride_size_in_pages;
-		byte = page   * physical->page_data_size_in_bytes;
+		byte = page   * mtd->writesize;
 
 		pr_info("  Looking for a fingerprint in page 0x%x\n", page);
 
@@ -128,14 +114,11 @@ static int check_transcription_stamp(struct gpmi_nfc_data *this)
 		 * Read the NCB fingerprint. The fingerprint is four bytes long
 		 * and starts in the 12th byte of the page.
 		 */
-
 		nand->cmdfunc(mtd, NAND_CMD_READ0, 12, page);
 		nand->read_buf(mtd, buffer, strlen(fingerprint));
 
 		/* Look for the fingerprint. */
-
-		if (!memcmp(buffer, fingerprint,
-					strlen(fingerprint))) {
+		if (!memcmp(buffer, fingerprint, strlen(fingerprint))) {
 			found_an_ncb_fingerprint = true;
 			break;
 		}
@@ -143,18 +126,13 @@ static int check_transcription_stamp(struct gpmi_nfc_data *this)
 	}
 
 	/* Deselect chip 0. */
-
 	nand->select_chip(mtd, saved_chip_number);
 
-	/* Return. */
-
 	if (found_an_ncb_fingerprint)
 		pr_info("  Found a fingerprint\n");
 	else
 		pr_info("  No fingerprint found\n");
-
 	return found_an_ncb_fingerprint;
-
 }
 
 /**
@@ -165,8 +143,8 @@ static int check_transcription_stamp(struct gpmi_nfc_data *this)
 static int write_transcription_stamp(struct gpmi_nfc_data *this)
 {
 	struct device             *dev      =  this->dev;
-	struct physical_geometry  *physical = &this->physical_geometry;
 	struct boot_rom_geometry  *rom_geo  = &this->rom_geometry;
+	struct nand_device_info	  *info     = &this->device_info;
 	struct mil                *mil      = &this->mil;
 	struct mtd_info           *mtd      = &mil->mtd;
 	struct nand_chip          *nand     = &mil->nand;
@@ -183,114 +161,81 @@ static int write_transcription_stamp(struct gpmi_nfc_data *this)
 	int                       status;
 
 	/* Compute the search area geometry. */
-
-	block_size_in_pages = physical->block_size_in_bytes >>
-				(ffs(physical->page_data_size_in_bytes) - 1);
-
+	block_size_in_pages = info->block_size_in_pages;
 	search_area_size_in_strides = 1 << rom_geo->search_area_stride_exponent;
-
 	search_area_size_in_pages = search_area_size_in_strides *
-						rom_geo->stride_size_in_pages;
-
+					rom_geo->stride_size_in_pages;
 	search_area_size_in_blocks =
 		  (search_area_size_in_pages + (block_size_in_pages - 1)) /
-		/*-------------------------------------------------------*/
 				    block_size_in_pages;
 
 	#if defined(DETAILED_INFO)
-
 	pr_info("--------------------\n");
 	pr_info("Search Area Geometry\n");
 	pr_info("--------------------\n");
 	pr_info("Search Area Size in Blocks : %u", search_area_size_in_blocks);
 	pr_info("Search Area Size in Strides: %u", search_area_size_in_strides);
 	pr_info("Search Area Size in Pages  : %u", search_area_size_in_pages);
-
 	#endif
 
 	/* Select chip 0. */
-
 	saved_chip_number = mil->current_chip;
 	nand->select_chip(mtd, 0);
 
 	/* Loop over blocks in the first search area, erasing them. */
-
 	pr_info("Erasing the search area...\n");
 
 	for (block = 0; block < search_area_size_in_blocks; block++) {
-
 		/* Compute the page address. */
-
 		page = block * block_size_in_pages;
 
 		/* Erase this block. */
-
 		pr_info("  Erasing block 0x%x\n", block);
-
 		nand->cmdfunc(mtd, NAND_CMD_ERASE1, -1, page);
 		nand->cmdfunc(mtd, NAND_CMD_ERASE2, -1, -1);
 
 		/* Wait for the erase to finish. */
-
 		status = nand->waitfunc(mtd, nand);
-
 		if (status & NAND_STATUS_FAIL)
 			dev_err(dev, "[%s] Erase failed.\n", __func__);
-
 	}
 
 	/* Write the NCB fingerprint into the page buffer. */
-
 	memset(buffer, ~0, mtd->writesize);
 	memset(nand->oob_poi, ~0, mtd->oobsize);
-
 	memcpy(buffer + 12, fingerprint, strlen(fingerprint));
 
 	/* Loop through the first search area, writing NCB fingerprints. */
-
 	pr_info("Writing NCB fingerprints...\n");
-
 	for (stride = 0; stride < search_area_size_in_strides; stride++) {
-
 		/* Compute the page and byte addresses. */
-
 		page = stride * rom_geo->stride_size_in_pages;
-		byte = page   * physical->page_data_size_in_bytes;
+		byte = page   * mtd->writesize;
 
 		/* Write the first page of the current stride. */
-
 		pr_info("  Writing an NCB fingerprint in page 0x%x\n", page);
-
 		nand->cmdfunc(mtd, NAND_CMD_SEQIN, 0x00, page);
 		nand->ecc.write_page_raw(mtd, nand, buffer);
 		nand->cmdfunc(mtd, NAND_CMD_PAGEPROG, -1, -1);
 
 		/* Wait for the write to finish. */
-
 		status = nand->waitfunc(mtd, nand);
-
 		if (status & NAND_STATUS_FAIL)
 			dev_err(dev, "[%s] Write failed.\n", __func__);
-
 	}
 
 	/* Deselect chip 0. */
-
 	nand->select_chip(mtd, saved_chip_number);
-
-	/* Return success. */
-
 	return 0;
-
 }
 
 static int imx23_rom_extra_init(struct gpmi_nfc_data  *this)
 {
 	struct device             *dev      =  this->dev;
-	struct physical_geometry  *physical = &this->physical_geometry;
 	struct mil                *mil      = &this->mil;
 	struct nand_chip          *nand     = &mil->nand;
 	struct mtd_info           *mtd      = &mil->mtd;
+	struct nand_device_info	  *info     = &this->device_info;
 	unsigned int              block_count;
 	unsigned int              block;
 	int                       chip;
@@ -315,8 +260,7 @@ static int imx23_rom_extra_init(struct gpmi_nfc_data  *this)
 	pr_info("Transcribing bad block marks...\n");
 
 	/* Compute the number of blocks in the entire medium. */
-	block_count =
-		physical->chip_size_in_bytes >> nand->phys_erase_shift;
+	block_count = info->chip_size_in_bytes >> nand->phys_erase_shift;
 
 	/*
 	 * Loop over all the blocks in the medium, transcribing block marks as
@@ -335,8 +279,7 @@ static int imx23_rom_extra_init(struct gpmi_nfc_data  *this)
 		nand->select_chip(mtd, chip);
 
 		/* Send the command to read the conventional block mark. */
-		nand->cmdfunc(mtd, NAND_CMD_READ0,
-				physical->page_data_size_in_bytes, page);
+		nand->cmdfunc(mtd, NAND_CMD_READ0, mtd->writesize, page);
 
 		/* Read the conventional block mark. */
 		block_mark = nand->read_byte(mtd);
-- 
1.5.4.4

