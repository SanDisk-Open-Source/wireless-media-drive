From 9b1a26230650c5d20c21bc614482cc5f6f786e46 Mon Sep 17 00:00:00 2001
From: Robby Cai <R63905@freescale.com>
Date: Thu, 21 Apr 2011 15:28:09 +0800
Subject: [PATCH] ENGR00142410 MX50 PXP: Fix PxP operation may time out or hang up

There might be a chance that clk_disable() is called when
PxP task is in process. Add this check before actually disable
PxP clock to fix this issue.

Signed-off-by: Ko Daiyu <R18641@freescale.com>
Signed-off-by: Robby Cai <R63905@freescale.com>
---
 drivers/dma/pxp/pxp_dma.c |   13 +++++++++++--
 1 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/dma/pxp/pxp_dma.c b/drivers/dma/pxp/pxp_dma.c
index fb43e27..eabf007 100644
--- a/drivers/dma/pxp/pxp_dma.c
+++ b/drivers/dma/pxp/pxp_dma.c
@@ -654,6 +654,8 @@ static void pxp_clk_enable(struct pxps *pxp)
 
 static void pxp_clk_disable(struct pxps *pxp)
 {
+	unsigned long flags;
+
 	mutex_lock(&pxp->clk_mutex);
 
 	if (pxp->clk_stat == CLK_STAT_OFF) {
@@ -661,8 +663,13 @@ static void pxp_clk_disable(struct pxps *pxp)
 		return;
 	}
 
-	clk_disable(pxp->clk);
-	pxp->clk_stat = CLK_STAT_OFF;
+	spin_lock_irqsave(&pxp->lock, flags);
+	if ((pxp->pxp_ongoing == 0) && list_empty(&head)) {
+		spin_unlock_irqrestore(&pxp->lock, flags);
+		clk_disable(pxp->clk);
+		pxp->clk_stat = CLK_STAT_OFF;
+	} else
+		spin_unlock_irqrestore(&pxp->lock, flags);
 
 	mutex_unlock(&pxp->clk_mutex);
 }
@@ -1088,7 +1095,9 @@ static void pxp_issue_pending(struct dma_chan *chan)
 		return;
 	}
 
+	spin_lock_irqsave(&pxp->lock, flags);
 	pxp->pxp_ongoing = 1;
+	spin_unlock_irqrestore(&pxp->lock, flags);
 	pxpdma_dostart_work(pxp);
 }
 
-- 
1.5.4.4

