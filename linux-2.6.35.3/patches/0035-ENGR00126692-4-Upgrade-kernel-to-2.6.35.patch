From f9ce730a4cd396db1c8768a2e7fa99fdb33e23e4 Mon Sep 17 00:00:00 2001
From: Dinh Nguyen <Dinh.Nguyen@freescale.com>
Date: Wed, 1 Sep 2010 10:41:09 -0500
Subject: [PATCH] ENGR00126692-4: Upgrade kernel to 2.6.35

This patch contains changes to /arch/arm files
Contains all checkpatch and copyright fixes.

Acked-by: Rob Herring <r.herring@freescale.com>
Signed-off-by: Dinh Nguyen <Dinh.Nguyen@freescale.com>
---
 arch/arm/include/asm/mach/flash.h    |    1 +
 arch/arm/include/asm/mach/keypad.h   |   29 +++
 arch/arm/mach-mx5/mx51_babbage.c     |    1 +
 arch/arm/plat-mxc/dptc.c             |    1 +
 arch/arm/plat-mxc/include/mach/mxc.h |  383 ----------------------------------
 arch/arm/plat-mxc/sdma/sdma.c        |    1 +
 6 files changed, 33 insertions(+), 383 deletions(-)

diff --git a/arch/arm/include/asm/mach/flash.h b/arch/arm/include/asm/mach/flash.h
index 4ca69fe..8b57c2e 100644
--- a/arch/arm/include/asm/mach/flash.h
+++ b/arch/arm/include/asm/mach/flash.h
@@ -34,6 +34,7 @@ struct flash_platform_data {
 	void		(*mmcontrol)(struct mtd_info *mtd, int sync_read);
 	struct mtd_partition *parts;
 	unsigned int	nr_parts;
+	char		*type;
 };
 
 #endif
diff --git a/arch/arm/include/asm/mach/keypad.h b/arch/arm/include/asm/mach/keypad.h
new file mode 100644
index 0000000..6f950d2
--- /dev/null
+++ b/arch/arm/include/asm/mach/keypad.h
@@ -0,0 +1,29 @@
+/*
+ * include/asm-arm/mach/keypad.h
+ *
+ * Generic Keypad struct
+ *
+ * Author: Armin Kuster <Akuster@mvista.com>
+ *
+ * 2005 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ * Copyright (C) 2010 Freescale Semiconductor,
+ */
+
+#ifndef __ASM_MACH_KEYPAD_H_
+#define __ASM_MACH_KEYPAD_H_
+
+#include <linux/input.h>
+
+struct keypad_data {
+	u16 rowmax;
+	u16 colmax;
+	u32 irq;
+	u16 delay;
+	u16 learning;
+	u16 *matrix;
+};
+
+#endif /* __ARM_MACH_KEYPAD_H_ */
diff --git a/arch/arm/mach-mx5/mx51_babbage.c b/arch/arm/mach-mx5/mx51_babbage.c
index a78cc5b..6f154f5 100644
--- a/arch/arm/mach-mx5/mx51_babbage.c
+++ b/arch/arm/mach-mx5/mx51_babbage.c
@@ -11,6 +11,7 @@
  * http://www.gnu.org/copyleft/gpl.html
  */
 
+#include <linux/slab.h>
 #include <linux/types.h>
 #include <linux/delay.h>
 #include <linux/pm.h>
diff --git a/arch/arm/plat-mxc/dptc.c b/arch/arm/plat-mxc/dptc.c
index a26fd9b..c34b7f0 100644
--- a/arch/arm/plat-mxc/dptc.c
+++ b/arch/arm/plat-mxc/dptc.c
@@ -29,6 +29,7 @@
  * @ingroup PM
  */
 
+#include <linux/slab.h>
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/init.h>
diff --git a/arch/arm/plat-mxc/include/mach/mxc.h b/arch/arm/plat-mxc/include/mach/mxc.h
index e1571ea..08b22e1 100644
--- a/arch/arm/plat-mxc/include/mach/mxc.h
+++ b/arch/arm/plat-mxc/include/mach/mxc.h
@@ -210,381 +210,7 @@ extern unsigned int system_rev;
 
 #include <linux/types.h>
 
-/*!
- * This structure is used to define the One wire platform data.
- * It includes search rom accelerator.
- */
-struct mxc_w1_config {
-	int search_rom_accelerator;
-};
-/*!
- * This structure is used to define the SPI master controller's platform
- * data. It includes the SPI  bus number and the maximum number of
- * slaves/chips it supports.
- */
-struct mxc_spi_master {
-	/*!
-	 * SPI Master's bus number.
-	 */
-	unsigned int bus_num;
-	/*!
-	 * SPI Master's maximum number of chip selects.
-	 */
-	unsigned int maxchipselect;
-	/*!
-	 * CSPI Hardware Version.
-	 */
-	unsigned int spi_version;
-	/*!
-	 * CSPI chipselect pin table.
-	 * Workaround for ecspi chipselect pin may not keep correct level when
-	 * idle.
-	 */
-	void (*chipselect_active) (int cspi_mode, int status, int chipselect);
-	void (*chipselect_inactive) (int cspi_mode, int status, int chipselect);
-};
-
-struct mxc_ipu_config {
-	int rev;
-	void (*reset) (void);
-	struct clk *di_clk[2];
-};
-
-struct mxc_ir_platform_data {
-	int uart_ir_mux;
-	int ir_rx_invert;
-	int ir_tx_invert;
-	struct clk *uart_clk;
-};
-
-struct mxc_i2c_platform_data {
-	u32 i2c_clk;
-};
-
-/*
- * This struct is to define the number of SSIs on a platform,
- * DAM source port config, DAM external port config,
- * regulator names, and other stuff audio needs.
- */
-struct mxc_audio_platform_data {
-	int ssi_num;
-	int src_port;
-	int ext_port;
-
-	int intr_id_hp;
-	int ext_ram;
-	struct clk *ssi_clk[2];
-
-	int hp_irq;
-	int (*hp_status) (void);
-
-	int sysclk;
-
-	int (*init) (void);	/* board specific init */
-	int (*amp_enable) (int enable);
-	int (*finit) (void);	/* board specific finit */
-	void *priv;		/* used by board specific functions */
-};
-
-struct mxc_spdif_platform_data {
-	int spdif_tx;
-	int spdif_rx;
-	int spdif_clk_44100;
-	int spdif_clk_48000;
-	int spdif_clkid;
-	struct clk *spdif_clk;
-	struct clk *spdif_core_clk;
-	struct clk *spdif_audio_clk;
-};
-
-struct mxc_asrc_platform_data {
-	struct clk *asrc_core_clk;
-	struct clk *asrc_audio_clk;
-	unsigned int channel_bits;
-};
-
-struct mxc_bt_platform_data {
-	char *bt_vdd;
-	char *bt_vdd_parent;
-	char *bt_vusb;
-	char *bt_vusb_parent;
-	void (*bt_reset) (void);
-};
-
-struct mxc_lightsensor_platform_data {
-	char *vdd_reg;
-	int rext;
-};
-
-struct mxc_fb_platform_data {
-	struct fb_videomode *mode;
-	char *mode_str;
-	u32 interface_pix_fmt;
-};
-
-struct mxc_lcd_platform_data {
-	char *io_reg;
-	char *core_reg;
-	char *analog_reg;
-	void (*reset) (void);
-};
-
-
-struct mxc_tsc_platform_data {
-	char *vdd_reg;
-	int penup_threshold;
-	void (*active) (void);
-	void (*inactive) (void);
-};
-
-struct mxc_tvout_platform_data {
-	char *io_reg;
-	char *core_reg;
-	char *analog_reg;
-	u32 detect_line;
-};
-
-struct mxc_tvin_platform_data {
-	char *dvddio_reg;
-	char *dvdd_reg;
-	char *avdd_reg;
-	char *pvdd_reg;
-	void (*pwdn) (int pwdn);
-	void (*reset) (void);
-};
-
-/*! Platform data for the IDE drive structure. */
-struct mxc_ide_platform_data {
-	char *power_drive;	/*!< The power pointer */
-	char *power_io;		/*!< The power pointer */
-};
-
-struct mxc_camera_platform_data {
-	char *core_regulator;
-	char *io_regulator;
-	char *analog_regulator;
-	char *gpo_regulator;
-	u32 mclk;
-	u32 csi;
-};
-
-/*gpo1-3 is in fixed state by hardware design,
- * only deal with reset pin and clock_enable pin
- * only poll mode can be used to control the chip,
- * interrupt mode is not supported by 3ds*/
-struct mxc_fm_platform_data {
-	char *reg_vio;
-	char *reg_vdd;
-	void (*gpio_get) (void);
-	void (*gpio_put) (void);
-	void (*reset) (void);
-	void (*clock_ctl) (int flag);
-	u8	sksnr; /*0,disable;1,most stop;0xf,fewest stop*/
-	u8	skcnt; /*0,disable;1,most stop;0xf,fewest stop*/
-	/*
-	00 = 87.5-108 MHz (USA,Europe) (Default).
-	01 = 76-108 MHz (Japan wide band).
-	10 = 76-90 MHz (Japan).
-	11 = Reserved.
-	*/
-	u8	band;
-	/*
-	00 = 200 kHz (USA, Australia) (default).
-	01 = 100 kHz (Europe, Japan).
-	10 = 50 kHz.
-	*/
-	u8	space;
-	u8	seekth;
-};
-
-struct mxc_mma7450_platform_data {
-	char *reg_dvdd_io;
-	char *reg_avdd;
-	void (*gpio_pin_get) (void);
-	void (*gpio_pin_put) (void);
-	int int1;
-	int int2;
-};
-
-struct mxc_keyp_platform_data {
-	u16 *matrix;
-	void (*active) (void);
-	void (*inactive) (void);
-	char *vdd_reg;
-};
-
-struct mxc_unifi_platform_data {
-	void (*hardreset) (int pin_level);
-	void (*enable) (int en);
-	/* power parameters */
-	char *reg_gpo1;
-	char *reg_gpo2;
-	char *reg_1v5_ana_bb;
-	char *reg_vdd_vpa;
-	char *reg_1v5_dd;
-
-	int host_id;
-
-	void *priv;
-};
-
-struct mxc_gps_platform_data {
-	char *core_reg;
-	char *analog_reg;
-	struct regulator *gps_regu_core;
-	struct regulator *gps_regu_analog;
-};
-
-struct mxc_mlb_platform_data {
-	u32 buf_address;
-	u32 phy_address;
-	char *reg_nvcc;
-	char *mlb_clk;
-};
-
-struct flexcan_platform_data {
-	char *core_reg;
-	char *io_reg;
-	void (*xcvr_enable) (int id, int en);
-	void (*active) (int id);
-	void (*inactive) (int id);
-	/* word 1 */
-	unsigned int br_presdiv:8;
-	unsigned int br_rjw:2;
-	unsigned int br_propseg:3;
-	unsigned int br_pseg1:3;
-	unsigned int br_pseg2:3;
-	unsigned int maxmb:6;
-	unsigned int xmit_maxmb:6;
-	unsigned int wd1_resv:1;
-
-	/* word 2 */
-	unsigned int fifo:1;
-	unsigned int wakeup:1;
-	unsigned int srx_dis:1;
-	unsigned int wak_src:1;
-	unsigned int bcc:1;
-	unsigned int lprio:1;
-	unsigned int abort:1;
-	unsigned int br_clksrc:1;
-	unsigned int loopback:1;
-	unsigned int smp:1;
-	unsigned int boff_rec:1;
-	unsigned int tsyn:1;
-	unsigned int listen:1;
-	unsigned int ext_msg:1;
-	unsigned int std_msg:1;
-};
-
-struct mxc_srtc_platform_data {
-	u32 srtc_sec_mode_addr;
-};
-
-struct tve_platform_data {
-	char *dac_reg;
-	char *dig_reg;
-};
-
-struct mxc_vpu_platform_data {
-	void (*reset) (void);
-};
-
-/* The name that links the i.MX NAND Flash Controller driver to its devices. */
-
-#define IMX_NFC_DRIVER_NAME  ("imx_nfc")
-
-/* Resource names for the i.MX NAND Flash Controller driver. */
-
-#define IMX_NFC_BUFFERS_ADDR_RES_NAME         \
-			("i.MX NAND Flash Controller Buffer")
-#define IMX_NFC_PRIMARY_REGS_ADDR_RES_NAME    \
-			("i.MX NAND Flash Controller Primary Registers")
-#define IMX_NFC_SECONDARY_REGS_ADDR_RES_NAME  \
-			("i.MX NAND Flash Controller Secondary Registers")
-#define IMX_NFC_INTERRUPT_RES_NAME            \
-			("i.MX NAND Flash Controller Interrupt")
-
-/**
- * struct imx_nfc_platform_data - i.MX NFC driver platform data.
- *
- * This structure communicates information to the i.MX NFC driver that can't be
- * expressed as resources.
- *
- * @nfc_major_version:  The "major version" of the NFC hardware.
- * @nfc_minor_version:  The "minor version" of the NFC hardware.
- * @force_ce:           If true, this flag causes the driver to assert the
- *                      hardware chip enable signal for the currently selected
- *                      chip as long as the MTD NAND Flash HAL has the chip
- *                      selected (not just when an I/O transaction is in
- *                      progress).
- * @target_cycle_in_ns: The target read and write cycle period, in nanoseconds.
- *                      NAND Flash part data sheets give minimum times for read
- *                      and write cycles in nanoseconds (usually tRC and tWC,
- *                      respectively). Set this value to the maximum of these
- *                      two parameters. The driver will set the NFC clock as
- *                      close as possible without violating this value.
- * @clock_name:         The name of the clock used by the NAND Flash controller.
- * @init:               A pointer to a function the driver must call so the
- *                      platform can prepare for this device to operate. This
- *                      pointer may be NULL.
- * @exit:               A pointer to a function the driver must call so the
- *                      platform clean up after this device stops operating.
- *                      This pointer may be NULL.
- * @set_page_size:      A pointer to a function the driver can call to set the
- *                      page size. This pointer may be NULL.
- *
- *                      For some i.MX SoC's, the NFC gets information about the
- *                      page size from signals driven by a system register
- *                      outside the NFC. The address and format of this external
- *                      register varies across SoC's. In other SoC's, the NFC
- *                      still receives this signal, but it is overridden by a
- *                      page size register in the NFC itself.
- *
- *                      For SoC's where the page size *must* be set in an
- *                      external register, the driver must rely on a platform-
- *                      specific function, and this member must point to it.
- *
- *                      For SoC's where the NFC has its own page size register,
- *                      the driver will set that register itself and ignore the
- *                      external signals. In this case, there's no need for the
- *                      platform-specific function and this member must be NULL.
- *
- *                      This function accepts the page size in bytes (MTD calls
- *                      this the "writesize") discovered by the NAND Flash MTD
- *                      base driver (e.g., 512, 2048, 4096). This size refers
- *                      specifically to the the data bytes in the page, *not*
- *                      including out-of-band bytes. The return value is zero if
- *                      the operation succeeded. The driver does *not* view a
- *                      non-zero value as an error code - only an indication of
- *                      failure. The driver will decide for itself what error
- *                      code to return to its caller.
- * @interleave:         Indicates that the driver should "interleave" the NAND
- *                      Flash chips it finds. If true, the driver will aggregate
- *                      the chips "horizontally" such that MTD will see a single
- *                      chip with a potentially very large page size. This can
- *                      improve write performance for some applications.
- * @partitions:         An optional pointer to an array of partitions. If this
- *                      is NULL, the driver will create a single MTD that
- *                      represents the entire medium.
- * @partition_count:    The number of elements in the partition array.
- */
-
-struct imx_nfc_platform_data {
-	unsigned int          nfc_major_version;
-	unsigned int          nfc_minor_version;
-	int                   force_ce;
-	unsigned int          target_cycle_in_ns;
-	char                  *clock_name;
-	int                   (*init)(void);
-	void                  (*exit)(void);
-	int                   (*set_page_size)(unsigned int data_size_in_bytes);
-	int                   interleave;
-	struct mtd_partition  *partitions;
-	unsigned int	      partition_count;
-};
-
 extern void mxc_wd_reset(void);
-unsigned long board_get_ckih_rate(void);
 
 int mxc_snoop_set_config(u32 num, unsigned long base, int size);
 int mxc_snoop_get_status(u32 num, u32 *statl, u32 *stath);
@@ -595,15 +221,6 @@ void mxc_pg_disable(struct platform_device *pdev);
 
 struct mxc_unifi_platform_data *get_unifi_plat_data(void);
 
-struct mxc_sim_platform_data {
-	unsigned int clk_rate;
-	char *clock_sim;
-	char *power_sim;
-	int (*init)(struct platform_device *pdev);
-	void (*exit)(void);
-	unsigned int detect; /* 1 have detect pin, 0 not */
-};
-
 #endif				/* __ASSEMBLY__ */
 
 /* DMA driver defines */
diff --git a/arch/arm/plat-mxc/sdma/sdma.c b/arch/arm/plat-mxc/sdma/sdma.c
index e9dd068..5968102 100644
--- a/arch/arm/plat-mxc/sdma/sdma.c
+++ b/arch/arm/plat-mxc/sdma/sdma.c
@@ -20,6 +20,7 @@
  * @ingroup SDMA
  */
 
+#include <linux/slab.h>
 #include <linux/init.h>
 #include <linux/types.h>
 #include <linux/mm.h>
-- 
1.5.4.4

