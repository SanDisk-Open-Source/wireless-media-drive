From 91f6b3bd0753dc1ce7650d81dfca36878d2e1cd4 Mon Sep 17 00:00:00 2001
From: Huang Shijie <b32955@freescale.com>
Date: Thu, 23 Dec 2010 13:06:55 +0800
Subject: [PATCH] ENGR00137270-4 GPMI : replace the old code with start_dma_without_bch_irq()

Replace the old code with the function start_dma_without_bch_irq().
This will make code tidy and clean.

Signed-off-by: Huang Shijie <b32955@freescale.com>
---
 drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v0.c |   72 ++------------------------
 drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v1.c |   72 ++------------------------
 drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v2.c |   26 +---------
 3 files changed, 15 insertions(+), 155 deletions(-)

diff --git a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v0.c b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v0.c
index 43a447a..2fcc634 100644
--- a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v0.c
+++ b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v0.c
@@ -372,13 +372,9 @@ static int is_ready(struct gpmi_nfc_data *this, unsigned chip)
 	uint32_t          register_image;
 
 	/* Extract and return the status. */
-
 	mask = BM_GPMI_DEBUG_READY0 << chip;
-
 	register_image = __raw_readl(resources->gpmi_regs + HW_GPMI_DEBUG);
-
 	return !!(register_image & mask);
-
 }
 
 /**
@@ -392,21 +388,14 @@ static int is_ready(struct gpmi_nfc_data *this, unsigned chip)
 static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
-	int                  dma_channel;
-	int                  error;
+	int    dma_channel		= resources->dma_low_channel + chip;
 	uint32_t             command_mode;
 	uint32_t             address;
 
-	/* Compute the DMA channel. */
-
-	dma_channel = resources->dma_low_channel + chip;
-
 	/* A DMA descriptor that sends out the command. */
-
 	command_mode = BV_GPMI_CTRL0_COMMAND_MODE__WRITE;
 	address      = BV_GPMI_CTRL0_ADDRESS__NAND_CLE;
 
@@ -426,19 +415,8 @@ static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 	(*d)->cmd.pio_words[2] = 0;
 
 	mxs_dma_desc_append(dma_channel, (*d));
-	d++;
-
-	/* Go! */
-
-	error = gpmi_nfc_dma_go(this, dma_channel);
-
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-
-	/* Return success. */
-
-	return error;
 
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -452,21 +430,14 @@ static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
-	int                  dma_channel;
-	int                  error = 0;
+	int    dma_channel		= resources->dma_low_channel + chip;
 	uint32_t             command_mode;
 	uint32_t             address;
 
-	/* Compute the DMA channel. */
-
-	dma_channel = resources->dma_low_channel + chip;
-
 	/* A DMA descriptor that writes a buffer out. */
-
 	command_mode = BV_GPMI_CTRL0_COMMAND_MODE__WRITE;
 	address      = BV_GPMI_CTRL0_ADDRESS__NAND_DATA;
 
@@ -485,19 +456,8 @@ static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 	(*d)->cmd.pio_words[3] = 0;
 
 	mxs_dma_desc_append(dma_channel, (*d));
-	d++;
-
-	/* Go! */
-
-	error = gpmi_nfc_dma_go(this, dma_channel);
-
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-
-	/* Return success. */
-
-	return error;
 
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -511,21 +471,14 @@ static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
-	int                  dma_channel;
-	int                  error = 0;
+	int    dma_channel		= resources->dma_low_channel + chip;
 	uint32_t             command_mode;
 	uint32_t             address;
 
-	/* Compute the DMA channel. */
-
-	dma_channel = resources->dma_low_channel + chip;
-
 	/* A DMA descriptor that reads the data. */
-
 	command_mode = BV_GPMI_CTRL0_COMMAND_MODE__READ;
 	address      = BV_GPMI_CTRL0_ADDRESS__NAND_DATA;
 
@@ -570,19 +523,8 @@ static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 	(*d)->cmd.pio_words[3] = 0;
 
 	mxs_dma_desc_append(dma_channel, (*d));
-	d++;
-
-	/* Go! */
-
-	error = gpmi_nfc_dma_go(this, dma_channel);
-
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-
-	/* Return success. */
-
-	return error;
 
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -596,7 +538,6 @@ static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 static int send_page(struct gpmi_nfc_data *this, unsigned chip,
 				dma_addr_t payload, dma_addr_t auxiliary)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct nfc_geometry  *nfc_geo   = &this->nfc_geometry;
@@ -649,7 +590,6 @@ static int send_page(struct gpmi_nfc_data *this, unsigned chip,
 static int read_page(struct gpmi_nfc_data *this, unsigned chip,
 				dma_addr_t payload, dma_addr_t auxiliary)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct nfc_geometry  *nfc_geo   = &this->nfc_geometry;
diff --git a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v1.c b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v1.c
index b645cc6..3a4266a 100644
--- a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v1.c
+++ b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v1.c
@@ -314,13 +314,9 @@ static int is_ready(struct gpmi_nfc_data *this, unsigned chip)
 	uint32_t          register_image;
 
 	/* Extract and return the status. */
-
 	mask = BF_GPMI_STAT_READY_BUSY(1 << chip);
-
 	register_image = __raw_readl(resources->gpmi_regs + HW_GPMI_STAT);
-
 	return !!(register_image & mask);
-
 }
 
 /**
@@ -334,21 +330,14 @@ static int is_ready(struct gpmi_nfc_data *this, unsigned chip)
 static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
-	int                  dma_channel;
-	int                  error;
+	int    dma_channel		= resources->dma_low_channel + chip;
 	uint32_t             command_mode;
 	uint32_t             address;
 
-	/* Compute the DMA channel. */
-
-	dma_channel = resources->dma_low_channel + chip;
-
 	/* A DMA descriptor that sends out the command. */
-
 	command_mode = BV_GPMI_CTRL0_COMMAND_MODE__WRITE;
 	address      = BV_GPMI_CTRL0_ADDRESS__NAND_CLE;
 
@@ -368,19 +357,8 @@ static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 	(*d)->cmd.pio_words[2] = 0;
 
 	mxs_dma_desc_append(dma_channel, (*d));
-	d++;
-
-	/* Go! */
-
-	error = gpmi_nfc_dma_go(this, dma_channel);
-
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-
-	/* Return success. */
-
-	return error;
 
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -394,21 +372,14 @@ static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
-	int                  dma_channel;
-	int                  error = 0;
+	int    dma_channel		= resources->dma_low_channel + chip;
 	uint32_t             command_mode;
 	uint32_t             address;
 
-	/* Compute the DMA channel. */
-
-	dma_channel = resources->dma_low_channel + chip;
-
 	/* A DMA descriptor that writes a buffer out. */
-
 	command_mode = BV_GPMI_CTRL0_COMMAND_MODE__WRITE;
 	address      = BV_GPMI_CTRL0_ADDRESS__NAND_DATA;
 
@@ -427,19 +398,8 @@ static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 	(*d)->cmd.pio_words[3] = 0;
 
 	mxs_dma_desc_append(dma_channel, (*d));
-	d++;
-
-	/* Go! */
-
-	error = gpmi_nfc_dma_go(this, dma_channel);
-
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-
-	/* Return success. */
-
-	return error;
 
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -453,21 +413,14 @@ static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
-	int                  dma_channel;
-	int                  error = 0;
+	int    dma_channel		= resources->dma_low_channel + chip;
 	uint32_t             command_mode;
 	uint32_t             address;
 
-	/* Compute the DMA channel. */
-
-	dma_channel = resources->dma_low_channel + chip;
-
 	/* A DMA descriptor that reads the data. */
-
 	command_mode = BV_GPMI_CTRL0_COMMAND_MODE__READ;
 	address      = BV_GPMI_CTRL0_ADDRESS__NAND_DATA;
 
@@ -512,19 +465,8 @@ static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 	(*d)->cmd.pio_words[3] = 0;
 
 	mxs_dma_desc_append(dma_channel, (*d));
-	d++;
-
-	/* Go! */
-
-	error = gpmi_nfc_dma_go(this, dma_channel);
-
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-
-	/* Return success. */
-
-	return error;
 
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -538,7 +480,6 @@ static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 static int send_page(struct gpmi_nfc_data *this, unsigned chip,
 				dma_addr_t payload, dma_addr_t auxiliary)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct nfc_geometry  *nfc_geo   = &this->nfc_geometry;
@@ -599,7 +540,6 @@ static int send_page(struct gpmi_nfc_data *this, unsigned chip,
 static int read_page(struct gpmi_nfc_data *this, unsigned chip,
 				dma_addr_t payload, dma_addr_t auxiliary)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct nfc_geometry  *nfc_geo   = &this->nfc_geometry;
diff --git a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v2.c b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v2.c
index e342a89..f1d46ff 100644
--- a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v2.c
+++ b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-hal-v2.c
@@ -652,12 +652,10 @@ static int is_ready(struct gpmi_nfc_data *this, unsigned chip)
 static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
 	int    dma_channel		= resources->dma_low_channel + chip;
-	int                  error;
 	uint32_t             command_mode;
 	uint32_t             address;
 
@@ -683,11 +681,7 @@ static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 
 	mxs_dma_desc_append(dma_channel, (*d));
 
-	/* Go! */
-	error = gpmi_nfc_dma_go(this, dma_channel);
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-	return error;
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -701,12 +695,10 @@ static int send_command(struct gpmi_nfc_data *this, unsigned chip,
 static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
 	int    dma_channel		= resources->dma_low_channel + chip;
-	int                  error = 0;
 	uint32_t             command_mode;
 	uint32_t             address;
 
@@ -730,11 +722,7 @@ static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 
 	mxs_dma_desc_append(dma_channel, (*d));
 
-	/* Go! */
-	error = gpmi_nfc_dma_go(this, dma_channel);
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-	return error;
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -748,12 +736,10 @@ static int send_data(struct gpmi_nfc_data *this, unsigned chip,
 static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 					dma_addr_t buffer, unsigned int length)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct mxs_dma_desc  **d        = nfc->dma_descriptors;
 	int    dma_channel		= resources->dma_low_channel + chip;
-	int                  error = 0;
 	uint32_t             command_mode;
 	uint32_t             address;
 
@@ -774,11 +760,7 @@ static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 
 	mxs_dma_desc_append(dma_channel, (*d));
 
-	/* Go! */
-	error = gpmi_nfc_dma_go(this, dma_channel);
-	if (error)
-		dev_err(dev, "[%s] DMA error\n", __func__);
-	return error;
+	return start_dma_without_bch_irq(this, dma_channel);
 }
 
 /**
@@ -792,7 +774,6 @@ static int read_data(struct gpmi_nfc_data *this, unsigned chip,
 static int send_page(struct gpmi_nfc_data *this, unsigned chip,
 				dma_addr_t payload, dma_addr_t auxiliary)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct nfc_geometry  *nfc_geo   = &this->nfc_geometry;
@@ -854,7 +835,6 @@ static int send_page(struct gpmi_nfc_data *this, unsigned chip,
 static int read_page(struct gpmi_nfc_data *this, unsigned chip,
 				dma_addr_t payload, dma_addr_t auxiliary)
 {
-	struct device        *dev       =  this->dev;
 	struct resources     *resources = &this->resources;
 	struct nfc_hal       *nfc       =  this->nfc;
 	struct nfc_geometry  *nfc_geo   = &this->nfc_geometry;
-- 
1.5.4.4

