From 4c6539f3161b66cdc2bb0d0ab917b2cd3c315cb9 Mon Sep 17 00:00:00 2001
From: Frank Li <Frank.Li@freescale.com>
Date: Thu, 30 Sep 2010 15:46:50 +0800
Subject: [PATCH] ENGR00132173 MX28: Optimize suspend current to 9mA

Change EMI ODT mode to save current on VDDIO_EMI pad. Save about 17mA@4.2v
Change EMI pad type to GPIO in suspend can save about 4mA@4.2v
Lower VDDD voltage to 1.1V can save about 2~4mA@4.2
Need remove J94 after entry suspend status to measure suspend current

Signed-off-by: Frank Li <Frank.Li@freescale.com>
---
 arch/arm/mach-mx28/emi_settings.c |   12 ++--
 arch/arm/mach-mx28/sleep.S        |  129 +++++++++++++++++++++++++++++++------
 2 files changed, 114 insertions(+), 27 deletions(-)

diff --git a/arch/arm/mach-mx28/emi_settings.c b/arch/arm/mach-mx28/emi_settings.c
index 56df6ad..3ca574f 100644
--- a/arch/arm/mach-mx28/emi_settings.c
+++ b/arch/arm/mach-mx28/emi_settings.c
@@ -169,8 +169,8 @@ void DDR2EmiController_EDE1116_133MHz(void)
 	DRAM_REG[72] = 0xf4004a27;
 	DRAM_REG[73] = 0xf4004a27;
 	DRAM_REG[74] = 0xf4004a27;
-	DRAM_REG[75] = 0x07400300;
-	DRAM_REG[76] = 0x07400300;
+	DRAM_REG[75] = 0x07000300;
+	DRAM_REG[76] = 0x07000300;
 	DRAM_REG[77] = 0x07400300;
 	DRAM_REG[78] = 0x07400300;
 	DRAM_REG[79] = 0x00000005;
@@ -365,8 +365,8 @@ void DDR2EmiController_EDE1116_166MHz(void)
 	DRAM_REG[72] = 0xf5004a27;
 	DRAM_REG[73] = 0xf5004a27;
 	DRAM_REG[74] = 0xf5004a27;
-	DRAM_REG[75] = 0x07400300;
-	DRAM_REG[76] = 0x07400300;
+	DRAM_REG[75] = 0x07000300;
+	DRAM_REG[76] = 0x07000300;
 	DRAM_REG[77] = 0x07400300;
 	DRAM_REG[78] = 0x07400300;
 	DRAM_REG[79] = 0x00000006;
@@ -560,8 +560,8 @@ void DDR2EmiController_EDE1116_200MHz(void)
 	DRAM_REG[72] = 0xf4004a27;
 	DRAM_REG[73] = 0xf4004a27;
 	DRAM_REG[74] = 0xf4004a27;
-	DRAM_REG[75] = 0x07400300;
-	DRAM_REG[76] = 0x07400300;
+	DRAM_REG[75] = 0x07000300;
+	DRAM_REG[76] = 0x07000300;
 	DRAM_REG[77] = 0x07400300;
 	DRAM_REG[78] = 0x07400300;
 	DRAM_REG[79] = 0x00000005;
diff --git a/arch/arm/mach-mx28/sleep.S b/arch/arm/mach-mx28/sleep.S
index 54e86bd..6c62bae 100644
--- a/arch/arm/mach-mx28/sleep.S
+++ b/arch/arm/mach-mx28/sleep.S
@@ -58,17 +58,20 @@
 #define HW_PINCTRL_EMI_DS_CTRL_ADDR \
 	(MX28_SOC_IO_ADDRESS(PINCTRL_PHYS_ADDR) + HW_PINCTRL_EMI_DS_CTRL)
 
+#define HW_POWER_5VCTRL_ADDR \
+	(MX28_SOC_IO_ADDRESS(POWER_PHYS_ADDR) + HW_POWER_5VCTRL)
 #define HW_POWER_LOOPCTRL_ADDR \
 	(MX28_SOC_IO_ADDRESS(POWER_PHYS_ADDR) + HW_POWER_LOOPCTRL)
-
+#define HW_POWER_STS_ADDR \
+	(MX28_SOC_IO_ADDRESS(POWER_PHYS_ADDR) + HW_POWER_STS)
 #define HW_POWER_MINPWR_ADDR \
 	(MX28_SOC_IO_ADDRESS(POWER_PHYS_ADDR) + HW_POWER_MINPWR)
 
 #define PHYS_RAM_START		0x40000000
 
-#define LOWER_VDDIO 6
-#define LOWER_VDDA 9
-#define LOWER_VDDD 0x16
+#define LOWER_VDDIO 5
+#define LOWER_VDDA  9
+#define LOWER_VDDD  12
 
 #define VDDIOCTRL_BACKUP 0
 #define VDDACTRL_BACKUP 1
@@ -154,15 +157,17 @@ ENTRY(mx28_cpu_standby)
 	mov	lr, pc
 	mov	pc, r1
 	@ put DRAM into self refresh
-	mov	r0, #(HW_DRAM_CTL17_ADDR & 0x000000FF)
-	orr	r0, r0, #(HW_DRAM_CTL17_ADDR & 0x0000FF00)
-	orr	r0, r0, #(HW_DRAM_CTL17_ADDR & 0x00FF0000)
-	orr	r0, r0, #(HW_DRAM_CTL17_ADDR & 0xFF000000)
-	ldr	r1, [r0]
-	orr	r1, r1, #(BM_DRAM_CTL17_SREFRESH)
+	mov	r0, #(HW_DRAM_CTL22_ADDR & 0x000000FF)
+	orr	r0, r0, #(HW_DRAM_CTL22_ADDR & 0x0000FF00)
+	orr	r0, r0, #(HW_DRAM_CTL22_ADDR & 0x00FF0000)
+	orr	r0, r0, #(HW_DRAM_CTL22_ADDR & 0xFF000000)
+	ldr     r1,[r0]
+	and	r1, r1, #(~BM_DRAM_CTL22_LOWPOWER_CONTROL)
+        orr	r1, r1, #(BF_DRAM_CTL22_LOWPOWER_CONTROL(2))
 	str	r1, [r0]
+
 	@ wait for it to actually happen
-	mov	r0, #24 << 5
+	mov	r0, #24 << 12
 11:	sub	r0, r0, #1
 	cmp	r0, #0
 	bne	11b
@@ -180,34 +185,76 @@ ENTRY(mx28_cpu_standby)
 //	BM_PINCTRL_EMI_DS_CTRL_DDR_MODE,\
 //	BF_PINCTRL_EMI_DS_CTRL_DDR_MODE(0x1), 4
 
+	mov	r0, #(HW_PINCTRL_EMI_DS_CTRL_ADDR & 0x000000FF)
+	orr	r0, r0, #(HW_PINCTRL_EMI_DS_CTRL_ADDR & 0x0000FF00)
+	orr	r0, r0, #(HW_PINCTRL_EMI_DS_CTRL_ADDR & 0x00FF0000)
+	orr	r0, r0, #(HW_PINCTRL_EMI_DS_CTRL_ADDR & 0xFF000000)
+	ldr	r1, [r0]
+	and	r1, r1, #(~BM_PINCTRL_EMI_DS_CTRL_DDR_MODE)
+	orr     r1, r1, #(BF_PINCTRL_EMI_DS_CTRL_DDR_MODE(0x1))
+	str	r1, [r0]
+
+	mov	r2, #(HW_POWER_STS_ADDR & 0x000000FF)
+	orr	r2, r2, #(HW_POWER_STS_ADDR & 0x0000FF00)
+	orr	r2, r2, #(HW_POWER_STS_ADDR & 0x00FF0000)
+	orr	r2, r2, #(HW_POWER_STS_ADDR & 0xFF000000)
 	// vddio
 	PM_SET_AND_BACKUP_REG HW_POWER_VDDIOCTRL_ADDR,\
 	BM_POWER_VDDIOCTRL_TRG, LOWER_VDDIO, VDDIOCTRL_BACKUP
+
+7:
 	mov	r0, #24 << 10
 1:	sub	r0, r0, #1
 	cmp	r0, #0
 	bne	1b
 
+	ldr     r0,[r2]
+	and     r0,r0,#(BM_POWER_STS_DC_OK)
+	cmp     r0,#(BM_POWER_STS_DC_OK)
+	bne     7b
+
 	PM_SET_AND_BACKUP_REG HW_POWER_VDDACTRL_ADDR,\
 	BM_POWER_VDDACTRL_TRG, LOWER_VDDA, VDDACTRL_BACKUP
+8:
 	mov	r0, #24 << 10
 2:	sub	r0, r0, #1
 	cmp	r0, #0
 	bne	2b
 
+	ldr     r0,[r2]
+	and     r0,r0,#(BM_POWER_STS_DC_OK)
+	cmp     r0,#(BM_POWER_STS_DC_OK)
+	bne     8b
+
 	PM_SET_AND_BACKUP_REG HW_POWER_VDDDCTRL_ADDR,\
 	BM_POWER_VDDDCTRL_TRG, LOWER_VDDD, VDDDCTRL_BACKUP
+9:
 	mov	r0, #24 << 10
 3:	sub	r0, r0, #1
 	cmp	r0, #0
 	bne	3b
 
+	ldr     r0,[r2]
+	and     r0,r0,#(BM_POWER_STS_DC_OK)
+	cmp     r0,#(BM_POWER_STS_DC_OK)
+	bne     9b
+
+	@ wait for DC OK
+	mov	r0, #(HW_POWER_STS_ADDR & 0x000000FF)
+	orr	r0, r0, #(HW_POWER_STS_ADDR & 0x0000FF00)
+	orr	r0, r0, #(HW_POWER_STS_ADDR & 0x00FF0000)
+	orr	r0, r0, #(HW_POWER_STS_ADDR & 0xFF000000)
+4:	ldr     r1,[r0]
+	and     r1,r1,#(BM_POWER_STS_DC_OK)
+	cmp     r1,#(BM_POWER_STS_DC_OK)
+	bne     4b
+
 	PM_BACKUP_REG HW_POWER_LOOPCTRL_ADDR, POWER_LOOPCTRL_BACKUP
 	PM_BACKUP_REG HW_POWER_MINPWR_ADDR, POWER_MINPWR_BACKUP
 
-//	PM_BITS_CLR	HW_POWER_LOOPCTRL_ADDR, BM_POWER_LOOPCTRL_EN_RCSCALE
-//	PM_WRITE_REG_MASK	HW_POWER_LOOPCTRL_ADDR, BM_POWER_LOOPCTRL_DC_R,\
-//		(2<<BP_POWER_LOOPCTRL_DC_R)
+	PM_BITS_CLR	HW_POWER_LOOPCTRL_ADDR, BM_POWER_LOOPCTRL_EN_RCSCALE
+	PM_WRITE_REG_MASK	HW_POWER_LOOPCTRL_ADDR, BM_POWER_LOOPCTRL_DC_R,\
+		(2<<BP_POWER_LOOPCTRL_DC_R)
 
 	// half fets
 	PM_BITS_SET HW_POWER_MINPWR_ADDR, BM_POWER_MINPWR_HALF_FETS
@@ -221,7 +268,10 @@ ENTRY(mx28_cpu_standby)
 	PM_BITS_SET HW_POWER_MINPWR_ADDR, BM_POWER_MINPWR_EN_DC_PFM
 
 
-    //Gated PLL0
+	PM_BITS_SET     HW_POWER_MINPWR_ADDR, BM_POWER_MINPWR_LESSANA_I
+
+	PM_BITS_SET     HW_POWER_5VCTRL_ADDR, BM_POWER_5VCTRL_ILIMIT_EQ_ZERO
+	//Gated PLL0
 	PM_BITS_CLR	HW_CLKCTRL_PLL0CTRL0_ADDR, BM_CLKCTRL_PLL0CTRL0_POWER
 
 	@ do enter standby
@@ -243,29 +293,66 @@ ENTRY(mx28_cpu_standby)
 	nop
 	nop
 
+	mov	r2, #(HW_POWER_STS_ADDR & 0x000000FF)
+	orr	r2, r2, #(HW_POWER_STS_ADDR & 0x0000FF00)
+	orr	r2, r2, #(HW_POWER_STS_ADDR & 0x00FF0000)
+	orr	r2, r2, #(HW_POWER_STS_ADDR & 0xFF000000)
+
 	PM_BITS_SET	HW_CLKCTRL_PLL0CTRL0_ADDR, BM_CLKCTRL_PLL0CTRL0_POWER
 
 	PM_SET_RESTORE_REG HW_POWER_MINPWR_ADDR, POWER_MINPWR_BACKUP
 
 	PM_SET_RESTORE_REG HW_POWER_LOOPCTRL_ADDR, POWER_LOOPCTRL_BACKUP
 
+	PM_BITS_CLR     HW_POWER_MINPWR_ADDR, BM_POWER_MINPWR_LESSANA_I
+
+	PM_BITS_CLR     HW_POWER_5VCTRL_ADDR, BM_POWER_5VCTRL_ILIMIT_EQ_ZERO
 	// vddio
 	PM_SET_RESTORE_REG HW_POWER_VDDIOCTRL_ADDR, VDDIOCTRL_BACKUP
+77:
 	mov	r0, #24 << 10
 10:	sub	r0, r0, #1
 	cmp	r0, #0
 	bne	10b
+
+	ldr     r0,[r2]
+	and     r0,r0,#(BM_POWER_STS_DC_OK)
+	cmp     r0,#(BM_POWER_STS_DC_OK)
+	bne     77b
+
 	PM_SET_RESTORE_REG HW_POWER_VDDACTRL_ADDR, VDDACTRL_BACKUP
+88:
 	mov	r0, #24 << 10
 20:	sub	r0, r0, #1
 	cmp	r0, #0
 	bne	20b
+
+	ldr     r0,[r2]
+	and     r0,r0,#(BM_POWER_STS_DC_OK)
+	cmp     r0,#(BM_POWER_STS_DC_OK)
+	bne     88b
+
 	PM_SET_RESTORE_REG HW_POWER_VDDDCTRL_ADDR, VDDDCTRL_BACKUP
+99:
 	mov	r0, #24 << 10
 30:	sub	r0, r0, #1
 	cmp	r0, #0
 	bne	30b
 
+	ldr     r0,[r2]
+	and     r0,r0,#(BM_POWER_STS_DC_OK)
+	cmp     r0,#(BM_POWER_STS_DC_OK)
+	bne     99b
+
+	mov	r0, #(HW_PINCTRL_EMI_DS_CTRL_ADDR & 0x000000FF)
+	orr	r0, r0, #(HW_PINCTRL_EMI_DS_CTRL_ADDR & 0x0000FF00)
+	orr	r0, r0, #(HW_PINCTRL_EMI_DS_CTRL_ADDR & 0x00FF0000)
+	orr	r0, r0, #(HW_PINCTRL_EMI_DS_CTRL_ADDR & 0xFF000000)
+	ldr	r1, [r0]
+	and	r1, r1, #(~BM_PINCTRL_EMI_DS_CTRL_DDR_MODE)
+	orr	r1, r1, #(BF_PINCTRL_EMI_DS_CTRL_DDR_MODE(3))
+	str	r1, [r0]
+
 	@ ungate clk
 	mov	r0, #(HW_CLKCTRL_EMI_ADDR & 0x000000FF)
 	orr	r0, r0, #(HW_CLKCTRL_EMI_ADDR & 0x0000FF00)
@@ -277,15 +364,15 @@ ENTRY(mx28_cpu_standby)
 
 //	PM_SET_RESTORE_REG HW_PINCTRL_EMI_DS_CTRL_ADDR, 4
 	@ restore normal DRAM mode
-	mov	r0, #(HW_DRAM_CTL17_ADDR & 0x000000FF)
-	orr	r0, r0, #(HW_DRAM_CTL17_ADDR & 0x0000FF00)
-	orr	r0, r0, #(HW_DRAM_CTL17_ADDR & 0x00FF0000)
-	orr	r0, r0, #(HW_DRAM_CTL17_ADDR & 0xFF000000)
+	mov	r0, #(HW_DRAM_CTL22_ADDR & 0x000000FF)
+	orr	r0, r0, #(HW_DRAM_CTL22_ADDR & 0x0000FF00)
+	orr	r0, r0, #(HW_DRAM_CTL22_ADDR & 0x00FF0000)
+	orr	r0, r0, #(HW_DRAM_CTL22_ADDR & 0xFF000000)
 	ldr	r1, [r0]
-	bic	r1, r1, #BM_DRAM_CTL17_SREFRESH
+	bic	r1, r1, #(BF_DRAM_CTL22_LOWPOWER_CONTROL(2))
 	str	r1, [r0]
 	@ wait for it to actually happen
-	mov	r0, #24 << 5
+	mov	r0, #24 << 12
 12:	sub	r0, r0, #1
 	cmp	r0, #0
 	bne	12b
-- 
1.5.4.4

