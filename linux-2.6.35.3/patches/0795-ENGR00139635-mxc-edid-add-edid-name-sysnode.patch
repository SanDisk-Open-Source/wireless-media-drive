From 5dbcc3e22a82d849ee69576857bb54060e432fc8 Mon Sep 17 00:00:00 2001
From: Jason Chen <b02280@freescale.com>
Date: Wed, 23 Feb 2011 18:18:50 +0800
Subject: [PATCH] ENGR00139635 mxc edid: add edid name sysnode

Add name sysnode to mxc_ddc and sii902x, which can be check under:
/sys/devices/platform/mxc_ddc.0/fb_name
or
/sys/devices/platform/sii902x.0/fb_name
It's the name of fb fix id which it associated.

Signed-off-by: Jason Chen <b02280@freescale.com>
---
 drivers/video/mxc/mxc_edid.c      |   15 +++++++++++++++
 drivers/video/mxc/mxcfb_sii902x.c |   15 +++++++++++++++
 2 files changed, 30 insertions(+), 0 deletions(-)

diff --git a/drivers/video/mxc/mxc_edid.c b/drivers/video/mxc/mxc_edid.c
index c57b594..88ec908 100644
--- a/drivers/video/mxc/mxc_edid.c
+++ b/drivers/video/mxc/mxc_edid.c
@@ -358,6 +358,17 @@ static ssize_t mxc_ddc_show_state(struct device *dev,
 
 static DEVICE_ATTR(cable_state, S_IRUGO, mxc_ddc_show_state, NULL);
 
+static ssize_t mxc_ddc_show_name(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	strcpy(buf, mxc_ddc.fbi->fix.id);
+	sprintf(buf+strlen(buf), "\n");
+
+	return strlen(buf);
+}
+
+static DEVICE_ATTR(fb_name, S_IRUGO, mxc_ddc_show_name, NULL);
+
 static ssize_t mxc_ddc_show_edid(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
@@ -521,6 +532,10 @@ static int __devinit mxc_ddc_probe(struct i2c_client *client,
 			goto err;
 		} else {
 			INIT_DELAYED_WORK(&(mxc_ddc.det_work), det_worker);
+			ret = device_create_file(&mxc_ddc.pdev->dev, &dev_attr_fb_name);
+			if (ret < 0)
+				dev_warn(&client->dev,
+					"MXC ddc: cound not create sys node for fb name\n");
 			ret = device_create_file(&mxc_ddc.pdev->dev, &dev_attr_cable_state);
 			if (ret < 0)
 				dev_warn(&client->dev,
diff --git a/drivers/video/mxc/mxcfb_sii902x.c b/drivers/video/mxc/mxcfb_sii902x.c
index 89a81c1..0282e4a 100644
--- a/drivers/video/mxc/mxcfb_sii902x.c
+++ b/drivers/video/mxc/mxcfb_sii902x.c
@@ -78,6 +78,17 @@ static __attribute__ ((unused)) void dump_regs(u8 reg, int len)
 				i+reg, buf[i]);
 }
 
+static ssize_t sii902x_show_name(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	strcpy(buf, sii902x.fbi->fix.id);
+	sprintf(buf+strlen(buf), "\n");
+
+	return strlen(buf);
+}
+
+static DEVICE_ATTR(fb_name, S_IRUGO, sii902x_show_name, NULL);
+
 static ssize_t sii902x_show_state(struct device *dev,
 		struct device_attribute *attr, char *buf)
 {
@@ -366,6 +377,10 @@ static int __devinit sii902x_probe(struct i2c_client *client,
 			i2c_smbus_write_byte_data(sii902x.client, 0x3c, 0x01);
 			INIT_DELAYED_WORK(&(sii902x.det_work), det_worker);
 		}
+		ret = device_create_file(&sii902x.pdev->dev, &dev_attr_fb_name);
+		if (ret < 0)
+			dev_warn(&sii902x.client->dev,
+				"Sii902x: cound not create sys node for fb name\n");
 		ret = device_create_file(&sii902x.pdev->dev, &dev_attr_cable_state);
 		if (ret < 0)
 			dev_warn(&sii902x.client->dev,
-- 
1.5.4.4

